<layouts>
<layout name="General" style="0" type="8" expression="" trainswitch="0">
	<chart id="47" name="" title="Overview" >
		<property name="title" type="QString" value="Overview" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="config" type="QString" value="{\n  &quot;version&quot;:&quot;2.0&quot;,\n  &quot;widths&quot;:[ 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200 ],\n  &quot;CHARTS&quot;:[\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:15,&quot;column&quot;:0,&quot;order&quot;:110,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;total_distance&quot;,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Going Long&quot; },\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:16,&quot;column&quot;:0,&quot;order&quot;:168,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;skiba_wprime_low&quot;,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Going Deep&quot; },\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:17,&quot;column&quot;:0,&quot;order&quot;:179,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;average_speed&quot;,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Going Fast&quot; },\n    { &quot;type&quot;:113,&quot;span&quot;:4,&quot;deep&quot;:32,&quot;column&quot;:0,&quot;order&quot;:193,&quot;settings&quot;:&quot;{ \&quot;title\&quot;: \&quot; \&quot;,\n\&quot;description\&quot;: \&quot;A description of the chart, mostly useful when the chart is uploaded to the cloud to let others know what this chart is useful for etc. \&quot;,\n\&quot;type\&quot;: 1,\n\&quot;animate\&quot;: false,\n\&quot;intervalrefresh\&quot;: false,\n\&quot;legendpos\&quot;: 2,\n\&quot;stack\&quot;: false,\n\&quot;orientation\&quot;: 1,\n\&quot;bgcolor\&quot;: \&quot;#010161\&quot;, \n\&quot;scale\&quot;: 2.5,\n\&quot;SERIES\&quot;: [\n{ \&quot;name\&quot;: \&quot;CTL \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;Date \&quot;, \&quot;yname\&quot;: \&quot;TSS \&quot;, \&quot;program\&quot;: \&quot;{:sl:n    finalise {:sl:n        # we just fetch metrics at the end:sl:n        xx &lt;- pmc(BikeStress, date);:sl:n        yy &lt;- pmc(BikeStress, lts);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 1, \&quot;symbol\&quot;: 0, \&quot;size\&quot;: 2, \&quot;color\&quot;: \&quot;#010129\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: true, \&quot;datalabels\&quot;: false, \&quot;aggregate\&quot;: 1, \&quot;fill\&quot;: false},\n{ \&quot;name\&quot;: \&quot;ATL \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;Date \&quot;, \&quot;yname\&quot;: \&quot;TSS \&quot;, \&quot;program\&quot;: \&quot;{:sl:n    finalise {:sl:n        # we just fetch metrics at the end:sl:n        xx &lt;- pmc(BikeStress, date);:sl:n        yy &lt;- pmc(BikeStress, sts);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 1, \&quot;symbol\&quot;: 0, \&quot;size\&quot;: 2, \&quot;color\&quot;: \&quot;#010128\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: true, \&quot;datalabels\&quot;: false, \&quot;aggregate\&quot;: 1, \&quot;fill\&quot;: false},\n{ \&quot;name\&quot;: \&quot;TSB \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;Date \&quot;, \&quot;yname\&quot;: \&quot;TSS \&quot;, \&quot;program\&quot;: \&quot;{:sl:n    finalise {:sl:n        # we just fetch metrics at the end:sl:n        xx &lt;- pmc(BikeStress, date);:sl:n        yy &lt;- pmc(BikeStress, sb);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 1, \&quot;symbol\&quot;: 0, \&quot;size\&quot;: 2, \&quot;color\&quot;: \&quot;#01012a\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: true, \&quot;datalabels\&quot;: false, \&quot;aggregate\&quot;: 1, \&quot;fill\&quot;: false} ]\n,\n\&quot;AXES\&quot;: [\n{ \&quot;name\&quot;: \&quot;Date \&quot;, \&quot;type\&quot;: 1, \&quot;orientation\&quot;: 1, \&quot;align\&quot;: 1, \&quot;minx\&quot;: 0, \&quot;maxx\&quot;: 0, \&quot;miny\&quot;: 0, \&quot;maxy\&quot;: 0, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 1, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: false, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#2684f6\&quot;, \&quot;axiscolor\&quot;: \&quot;#2684f6\&quot;},\n{ \&quot;name\&quot;: \&quot;TSS \&quot;, \&quot;type\&quot;: 0, \&quot;orientation\&quot;: 2, \&quot;align\&quot;: 1, \&quot;minx\&quot;: 0, \&quot;maxx\&quot;: 0, \&quot;miny\&quot;: 0, \&quot;maxy\&quot;: 0, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 0, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: false, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#010129\&quot;, \&quot;axiscolor\&quot;: \&quot;#010129\&quot;} ]\n} &quot;,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;PMC&quot; },\n    { &quot;type&quot;:113,&quot;span&quot;:6,&quot;deep&quot;:18,&quot;column&quot;:0,&quot;order&quot;:195,&quot;settings&quot;:&quot;{ \&quot;title\&quot;: \&quot; \&quot;,\n\&quot;description\&quot;: \&quot;A description of the chart, mostly useful when the chart is uploaded to the cloud to let others know what this chart is useful for etc. \&quot;,\n\&quot;type\&quot;: 3,\n\&quot;animate\&quot;: false,\n\&quot;intervalrefresh\&quot;: false,\n\&quot;legendpos\&quot;: 2,\n\&quot;stack\&quot;: false,\n\&quot;orientation\&quot;: 1,\n\&quot;bgcolor\&quot;: \&quot;#010161\&quot;, \n\&quot;scale\&quot;: 2.5,\n\&quot;SERIES\&quot;: [\n{ \&quot;name\&quot;: \&quot;TSS \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;Date \&quot;, \&quot;yname\&quot;: \&quot;TSS \&quot;, \&quot;program\&quot;: \&quot;{:sl:n:sl:n    finalise {:sl:n        # we just fetch metrics at the end:sl:n        xx &lt;- metrics(date);:sl:n        yy &lt;- round(metrics(BikeStress));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 1, \&quot;symbol\&quot;: 0, \&quot;size\&quot;: 1, \&quot;color\&quot;: \&quot;#010126\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: true, \&quot;datalabels\&quot;: true, \&quot;aggregate\&quot;: 0, \&quot;fill\&quot;: false} ]\n,\n\&quot;AXES\&quot;: [\n{ \&quot;name\&quot;: \&quot;Date \&quot;, \&quot;type\&quot;: 1, \&quot;orientation\&quot;: 1, \&quot;align\&quot;: 1, \&quot;minx\&quot;: 0, \&quot;maxx\&quot;: 0, \&quot;miny\&quot;: 0, \&quot;maxy\&quot;: 0, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 3, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: false, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#2684f6\&quot;, \&quot;axiscolor\&quot;: \&quot;#2684f6\&quot;},\n{ \&quot;name\&quot;: \&quot;TSS \&quot;, \&quot;type\&quot;: 0, \&quot;orientation\&quot;: 2, \&quot;align\&quot;: 1, \&quot;minx\&quot;: 0, \&quot;maxx\&quot;: 0, \&quot;miny\&quot;: 0, \&quot;maxy\&quot;: 0, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 0, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: false, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#010126\&quot;, \&quot;axiscolor\&quot;: \&quot;#010126\&quot;} ]\n} &quot;,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Monthly Load&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:1,&quot;order&quot;:1449,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{:sl:n    end &lt;- daterange(stop) &gt; Today ? Today : daterange(stop);:sl:n    days &lt;- end - daterange(start);:sl:n    round(sum(metrics(Distance)):sl:/(days:sl:/7)); :sl:n:sl:n} &quot;,&quot;units&quot;:&quot;km&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:300,&quot;datafilter&quot;:&quot;filter: &quot;,&quot;name&quot;:&quot;Weekly Distance&quot; },\n    { &quot;type&quot;:110,&quot;span&quot;:2,&quot;deep&quot;:24,&quot;column&quot;:1,&quot;order&quot;:1469,&quot;color&quot;:&quot;#010161&quot;,&quot;xsymbol&quot;:&quot;activity_date&quot;,&quot;ysymbol&quot;:&quot;average_power&quot;,&quot;zsymbol&quot;:&quot;coggan_tss&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Activities&quot; },\n    { &quot;type&quot;:112,&quot;span&quot;:2,&quot;deep&quot;:16,&quot;column&quot;:1,&quot;order&quot;:1470,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{:sl:n:sl:n# column names, if using metrics then best:sl:n# to use metricname() to get correct name for locale:sl:n# otherwise it won&apos;t translate to other languages:sl:nnames { :sl:n    c(:qu:Name:qu:,:qu:Description:qu:,:qu:Low:qu:,:qu:High:qu:,:qu:Time:qu:,:qu:%:qu:);:sl:n}:sl:n:sl:n# column units, if using metrics then best:sl:n# to use metricunit() function to get correct string:sl:n# for locale and metric:sl:/imperial:sl:nunits {:sl:n:sl:n    c(:qu::qu:,:sl:n      :qu::qu:,:sl:n      zones(power,units),:sl:n      zones(power,units), :qu::qu:, :qu::qu:);:sl:n}:sl:n:sl:n# values to display as doubles or strings:sl:n# if using metrics always best to use asstring():sl:n# to convert correctly with dp, metric:sl:/imperial:sl:n# or specific formats eg. rowing pace xx:sl:/500m:sl:nvalues { :sl:n:sl:n   c( zones(power,name),:sl:n      zones(power,description),:sl:n      zones(power,low),:sl:n      zones(power,high),:sl:n      zones(power,time),:sl:n      zones(power,percent));:sl:n} :sl:n:sl:n}:sl:n &quot;,&quot;sortcolumn&quot;:-1,&quot;sortorder&quot;:0,&quot;datafilter&quot;:&quot;filter: &quot;,&quot;name&quot;:&quot;Power Zones&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:2,&quot;order&quot;:11,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- (daterange(stop)-daterange(start)):sl:/7; round(10*sum(metrics(Duration):sl:/3600):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;hours&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:15,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Weekly Hours&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:3,&quot;order&quot;:115,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;coggan_tss&quot;,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Total TSS&quot; },\n    { &quot;type&quot;:103,&quot;span&quot;:1,&quot;deep&quot;:15,&quot;column&quot;:3,&quot;order&quot;:153,&quot;color&quot;:&quot;#010161&quot;,&quot;series&quot;:10,&quot;polarized&quot;:0,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Power Zones&quot; },\n    { &quot;type&quot;:109,&quot;span&quot;:1,&quot;deep&quot;:13,&quot;column&quot;:3,&quot;order&quot;:154,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;workout_time&quot;,&quot;meta&quot;:&quot;Workout Code&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Workout&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:3,&quot;order&quot;:265,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;workout_time&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Workout Time&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:3,&quot;order&quot;:357,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ round(max(pmc(BikeStress, lts))); } &quot;,&quot;units&quot;:&quot;stress&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:125,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Peak CTL&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:4,&quot;order&quot;:807,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ :sl:nround(max(banister(BikeScore, Power_Index,cp)));:sl:n} &quot;,&quot;units&quot;:&quot;watts&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:360,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Peak CP Estimate &quot; },\n    { &quot;type&quot;:113,&quot;span&quot;:2,&quot;deep&quot;:24,&quot;column&quot;:4,&quot;order&quot;:825,&quot;settings&quot;:&quot;{ \&quot;title\&quot;: \&quot; \&quot;,\n\&quot;description\&quot;: \&quot; \&quot;,\n\&quot;type\&quot;: 2,\n\&quot;animate\&quot;: false,\n\&quot;intervalrefresh\&quot;: false,\n\&quot;legendpos\&quot;: 2,\n\&quot;stack\&quot;: false,\n\&quot;orientation\&quot;: 2,\n\&quot;bgcolor\&quot;: \&quot;#010161\&quot;, \n\&quot;scale\&quot;: 2.5,\n\&quot;SERIES\&quot;: [\n{ \&quot;name\&quot;: \&quot;IF \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;TSB \&quot;, \&quot;yname\&quot;: \&quot;IF \&quot;, \&quot;program\&quot;: \&quot;{:sl:n    finalise {:sl:n        # we just fetch metrics at the end :sl:n        dates &lt;- metrics(date);:sl:n        pmcdates &lt;- pmc(BikeStress, date);:sl:n        indexes &lt;- match(dates, pmcdates);:sl:n        xx &lt;- pmc(BikeStress, sb)[indexes];:sl:n        yy &lt;- metrics(BikeIntensity);:sl:n        ff &lt;- filename();:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n    f { ff; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 0, \&quot;symbol\&quot;: 1, \&quot;size\&quot;: 20, \&quot;color\&quot;: \&quot;#ff3efc\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: false, \&quot;datalabels\&quot;: false, \&quot;aggregate\&quot;: 0, \&quot;fill\&quot;: false},\n{ \&quot;name\&quot;: \&quot;Tests \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;TSB \&quot;, \&quot;yname\&quot;: \&quot;IF \&quot;, \&quot;program\&quot;: \&quot;{:sl:n:sl:n    calc {:sl:n        dates &lt;- metrics(date);:sl:n        pmcdates &lt;- pmc(BikeStress, date);:sl:n        indexes &lt;- match(dates, pmcdates);:sl:n        xx &lt;- pmc(BikeStress, sb)[indexes];:sl:n        yy &lt;- metrics(BikeIntensity);:sl:n        ff &lt;- filename();:sl:n    }:sl:n:sl:n    finalise {:sl:n        # we just fetch metrics at the end :sl:n        activities(:qu:tests(user,power) &gt;0:qu:, calc());:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n    f { ff; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 0, \&quot;symbol\&quot;: 1, \&quot;size\&quot;: 20, \&quot;color\&quot;: \&quot;#010110\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: false, \&quot;datalabels\&quot;: false, \&quot;aggregate\&quot;: 0, \&quot;fill\&quot;: false} ]\n,\n\&quot;AXES\&quot;: [\n{ \&quot;name\&quot;: \&quot;TSB \&quot;, \&quot;type\&quot;: 0, \&quot;orientation\&quot;: 1, \&quot;align\&quot;: 1, \&quot;minx\&quot;: -15, \&quot;maxx\&quot;: 15, \&quot;miny\&quot;: 0, \&quot;maxy\&quot;: 0, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 0, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: true, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#2684f6\&quot;, \&quot;axiscolor\&quot;: \&quot;#2684f6\&quot;},\n{ \&quot;name\&quot;: \&quot;IF \&quot;, \&quot;type\&quot;: 0, \&quot;orientation\&quot;: 2, \&quot;align\&quot;: 1, \&quot;minx\&quot;: 0, \&quot;maxx\&quot;: 0, \&quot;miny\&quot;: 0.4, \&quot;maxy\&quot;: 1.2, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 0, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: true, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#ff3efc\&quot;, \&quot;axiscolor\&quot;: \&quot;#ff3efc\&quot;} ]\n} &quot;,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Scatter PMC &quot; },\n    { &quot;type&quot;:112,&quot;span&quot;:2,&quot;deep&quot;:16,&quot;column&quot;:4,&quot;order&quot;:826,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{:sl:n:sl:n# column names, if using metrics then best:sl:n# to use name() to get correct name for locale:sl:n# otherwise it won&apos;t translate to other languages:sl:nnames {:sl:n    metricname(date,:sl:n         Duration,:sl:n         Distance,:sl:n         Work,:sl:n         W&apos;_Work,:sl:n         30_min_Peak_Power);:sl:n}:sl:n:sl:n# column units, if using metrics then best:sl:n# to use unit() function to get correct string:sl:n# for locale and metric:sl:/imperial:sl:nunits {:sl:n    metricunit(date,:sl:n         Duration,:sl:n         Distance,:sl:n         Work,:sl:n         W&apos;_Work,:sl:n         30_min_Peak_Power);:sl:n}:sl:n:sl:n# values to display as doubles or strings:sl:n# if using metrics always best to use asstring():sl:n# to convert correctly with dp, metric:sl:/imperial:sl:n# or specific formats eg. rowing pace xx:sl:/500m:sl:nvalues { :sl:n    c(metricstrings(date),:sl:n      metricstrings(Duration),:sl:n      metricstrings(Distance),:sl:n      metricstrings(Work),:sl:n      metricstrings(W&apos;_Work),:sl:n      metricstrings(30_min_Peak_Power)); :sl:n} :sl:n:sl:nf {:sl:n    filename();:sl:n}:sl:n:sl:n} &quot;,&quot;sortcolumn&quot;:-1,&quot;sortorder&quot;:0,&quot;datafilter&quot;:&quot;filter:tests(user,power) &quot;,&quot;name&quot;:&quot;Performance tests&quot; },\n    { &quot;type&quot;:112,&quot;span&quot;:2,&quot;deep&quot;:32,&quot;column&quot;:4,&quot;order&quot;:827,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{:sl:n:sl:n# column names, if using metrics then best:sl:n# to use metricname() to get correct name for locale:sl:n# otherwise it won&apos;t translate to other languages:sl:nnames {:sl:n    c(:qu:Date:qu:, :qu:Daily:qu:, :qu:Chronic:qu:, :qu:Acute:qu:, :qu:Stress:qu:);:sl:n}:sl:n:sl:n# column units, if using metrics then best:sl:n# to use metricunit() function to get correct string:sl:n# for locale and metric:sl:/imperial:sl:nunits {:sl:n    c(:qu::qu:,:qu:TSS:qu:, :qu:Load:qu:,:qu:Load:qu:,:qu:Balance:qu:);:sl:n}:sl:n:sl:n# values to display as doubles or strings:sl:n# if using metrics always best to use asstring():sl:n# to convert correctly with dp, metric:sl:/imperial:sl:n# or specific formats eg. rowing pace xx:sl:/500m:sl:nvalues { :sl:n    c(datestring(pmc(BikeStress,date)),:sl:n      round(pmc(BikeStress,stress)),:sl:n      round(pmc(BikeStress,lts)),:sl:n      round(pmc(BikeStress,sts)),:sl:n      round(pmc(BikeStress,sb)));:sl:n:sl:n} :sl:n:sl:n:sl:n} &quot;,&quot;sortcolumn&quot;:-1,&quot;sortorder&quot;:0,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;PMC Data&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:5,&quot;order&quot;:1,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ round(max(estimates(cp3,w&apos;):sl:/1000)*10):sl:/10; } &quot;,&quot;units&quot;:&quot;kJ&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:25,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Peak W&apos; Estimate &quot; }\n  ]\n}\n" />
		<property name="minimumColumns" type="int" value="5" />
	</chart>
	<chart id="7" name="" title="PMC" >
		<property name="title" type="QString" value="PMC" />
		<property name="subtitle" type="QString" value="PMC" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="2" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="1" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Sat Aug 17 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="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" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="7" name="" title="Tracker" >
		<property name="title" type="QString" value="Tracker" />
		<property name="subtitle" type="QString" value="Tracker" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="2" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="1" />
		<property name="stack" type="bool" value="1" />
		<property name="stackWidth" type="int" value="4" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="1" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Wed Oct 30 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="/////wAAABwATABhAHMAdAAgADEAMgAgAG0AbwBuAHQAaABzACWHLgAAAAD/ACWImgAAAAD/AAAAAwAB////////////////AAAAFQAAAAgAAAABAAAAABwAdABvAHQAYQBsAF8AZABpAHMAdABhAG4AYwBlAAAAEABEAGkAcwB0AGEAbgBjAGUAAAAQAEQAaQBzAHQAYQBuAGMAZQAAAAQAawBtAAAAAAAAAAAAAAAAAAAAAAAAAQAAf/8AAH8WE0PZ0AAAAAAHfzzwAAAAAQAAAAAB//8AAAAA//8AAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAD5wAADhD/////AAAABgAAAAABAAAAAAAAAAAAAAAAAAB/RQCaY+QAAAAAAAD//////////wAAAAH/////AAAAAAAAAAABAQEAAAAWAHAAbwB3AGUAcgBfAGkAbgBkAGUAeAAAAAEAAAAAGAB3AG8AcgBrAG8AdQB0AF8AdABpAG0AZQAAABAARAB1AHIAYQB0AGkAbwBuAAAAEABEAHUAcgBhAHQAaQBvAG4AAAAOAHMAZQBjAG8AbgBkAHMAAAAAAAAAAAAAAAAAAAAAAAABAAB//wAAfxYTQ9nQAAAAAAd/PPAAAAABAAAAAAH//wAAqqr//wAAAAAAAD/wAAAAAAAAAAAAAAH//wAAAAAAAAAAAAAAAAAAAAPnAAAOEP////8AAAAGAAAAAAEAAAAAAAAAAAAAAAAAAH9FAJpj5AAAAAAAAP//////////AAAAAf////8AAAAAAAAAAAEBAQAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAABQD/////AAAAAAAAACgAUABlAGEAawAgADYAMAAgAG0AaQBuAHUAdABlACAAUABvAHcAZQByAAAACgB3AGEAdAB0AHMAAAAAAAUAAAAAAAAAAAAAAAABAAB/kgAAAAADquXwAAB//5K06gD//////////wH//6qqVVX//wAAAAAAAD/wAAAAAAAAAAAAAAH//wAAAAAAAAAAAAAAAAEAAAA8AAAAPAAAACgAUABlAGEAawBfADYAMABfAG0AaQBuAHUAdABlAF8AUABvAHcAZQByAAAACgAAAAAAAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAD5wAADhAAAAAAAAD/////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" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="7" name="" title="Stress" >
		<property name="title" type="QString" value="Stress" />
		<property name="subtitle" type="QString" value="Stress" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Mon Feb 24 2014" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="AAAAGgBTAHQAcgBlAHMAcwAgACgAVABJAFMAUwApAAAAHABMAGEAcwB0ACAAMQAyACAAbQBvAG4AdABoAHMAJYcuAAAAAP8AJYiaAAAAAP8AAAABAAH///////////////8AAAAVAAAABAAAAAIAAAAAEgBhAHQAaQBzAHMAXwBsAHQAcwAAADoAQQBlAHIAbwBiAGkAYwAgAFQASQBTAFMAIABMAG8AbgBnACAAVABlAHIAbQAgAFMAdAByAGUAcwBzAAAAOgBBAGUAcgBvAGIAaQBjACAAVABJAFMAUwAgAEwAbwBuAGcAIABUAGUAcgBtACAAUwB0AHIAZQBzAHMAAAASAEEAZQAgAFMAdAByAGUAcwBzAAAAAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAACAAAAAAAAAAE//////////8B//8AAP////8AAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAAAAAADhD/////AAAACv////8AAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAAAQAADhAAAAAAAAD//////////wAAAAH/////AAAAAAAAAAABAQEAAAAWAHAAbwB3AGUAcgBfAGkAbgBkAGUAeAAAAAIAAAAAFABhAG4AdABpAHMAcwBfAGwAdABzAAAAPgBBAG4AYQBlAHIAbwBiAGkAYwAgAFQASQBTAFMAIABMAG8AbgBnACAAVABlAHIAbQAgAFMAdAByAGUAcwBzAAAAPgBBAG4AYQBlAHIAbwBiAGkAYwAgAFQASQBTAFMAIABMAG8AbgBnACAAVABlAHIAbQAgAFMAdAByAGUAcwBzAAAAEgBBAG4AIABTAHQAcgBlAHMAcwAAAAAAAQAAAAAAAAAAAAAAAAEAAH/XAAAAAAAAAAAAAH//b/vK3///////////Af////8AAAAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAAWwAAA4Q/////wAAAAr/////AAAAAAAAAAAMADIAIABQAGEAcgBtAAAAAAAAAAEAAA4QAAAAAAAA//////////8AAAAB/////wAAAAAAAAAAAQEBAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAACAAAAABIAYQB0AGkAcwBzAF8AcwB0AHMAAAA8AEEAZQByAG8AYgBpAGMAIABUAEkAUwBTACAAUwBoAG8AcgB0ACAAVABlAHIAbQAgAFMAdAByAGUAcwBzAAAAPABBAGUAcgBvAGIAaQBjACAAVABJAFMAUwAgAFMAaABvAHIAdAAgAFQAZQByAG0AIABTAHQAcgBlAHMAcwAAABIAQQBlACAAUwB0AHIAZQBzAHMAAAAAAAEAAAAAAAAAAAAAAAABAAB//wAAf/+TVPjzAAAAAAAZbGP//////////wH///v7vLz//wAAAAAAAD/wAAAAAAAAAAAAAAH//wAAAAAAAAAAAAAAAAAAAAPnAAAOEP////8AAAAK/////wAAAAAAAAAADAAyACAAUABhAHIAbQAAAAAAAAAAAAAOEAAAAAAAAP//////////AAAAAf////8AAAAAAAAAAAEBAQAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAAAgAAAAAUAGEAbgB0AGkAcwBzAF8AcwB0AHMAAABAAEEAbgBhAGUAcgBvAGIAaQBjACAAVABJAFMAUwAgAFMAaABvAHIAdAAgAFQAZQByAG0AIABTAHQAcgBlAHMAcwAAAEAAQQBuAGEAZQByAG8AYgBpAGMAIABUAEkAUwBTACAAUwBoAG8AcgB0ACAAVABlAHIAbQAgAFMAdAByAGUAcwBzAAAAEgBBAG4AIABTAHQAcgBlAHMAcwAAAAAAAQAAAAAAAAAAAAAAAAEAAAABAAB//1+/0TAAAAABBHbdxf//////////Af//xsb///f3AAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAA+cAAA4Q/////wAAAAoAAAAAAAAAAAAAAAAMADIAIABQAGEAcgBtAAAAAAAAA+cAAA4QAAAAAAAA//////////8AAAAB/////wAAAAAAAAAAAQEBAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAAAAAM=" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="34" name="" title="Power" >
		<property name="title" type="QString" value="Power" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="series" type="int" value="1" />
		<property name="percent" type="int" value="1" />
		<property name="logY" type="bool" value="0" />
		<property name="zeroes" type="bool" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="zoned" type="bool" value="0" />
		<property name="cpZoned" type="bool" value="0" />
		<property name="zoneLimited" type="bool" value="0" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Thu Aug 15 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="plotColor" type="QString" value="#0000ff" />
		<property name="distmetric" type="QString" value="workout_time" />
		<property name="totalmetric" type="QString" value="ride_count" />
		<property name="dataMode" type="bool" value="1" />
		<property name="bin" type="double" value="0.05" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="34" name="" title="Speed" >
		<property name="title" type="QString" value="Speed" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="series" type="int" value="3" />
		<property name="percent" type="int" value="0" />
		<property name="logY" type="bool" value="0" />
		<property name="zeroes" type="bool" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="zoned" type="bool" value="0" />
		<property name="cpZoned" type="bool" value="0" />
		<property name="zoneLimited" type="bool" value="0" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Fri Apr 17 2015" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="plotColor" type="QString" value="#0000ff" />
		<property name="distmetric" type="QString" value="workout_time" />
		<property name="totalmetric" type="QString" value="ride_count" />
		<property name="dataMode" type="bool" value="1" />
		<property name="bin" type="double" value="0.5" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="7" name="" title="Aerobic Power" >
		<property name="title" type="QString" value="Aerobic Power" />
		<property name="subtitle" type="QString" value="Aerobic Power" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="1" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="0" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Thu Aug 15 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="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" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="7" name="" title="Anaerobic Power" >
		<property name="title" type="QString" value="Anaerobic Power" />
		<property name="subtitle" type="QString" value="Anaerobic Power" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="1" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="0" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Thu Aug 15 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="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" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="18" name="" title="Workout" >
		<property name="title" type="QString" value="Workout" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="f1" type="QString" value="Sport" />
		<property name="f2" type="QString" value="Workout Code" />
		<property name="metric" type="QString" value="coggan_tss" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Thu Aug 15 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="7" name="" title="Library" >
		<property name="title" type="QString" value="Library" />
		<property name="subtitle" type="QString" value="BikeStress and BikeIntensity" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="1" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Tue Mar 11 2014" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="AAAAOABCAGkAawBlAFMAdAByAGUAcwBzACAAYQBuAGQAIABCAGkAawBlAEkAbgB0AGUAbgBzAGkAdAB5AAAAOABCAGkAawBlAFMAdAByAGUAcwBzACAAYQBuAGQAIABCAGkAawBlAEkAbgB0AGUAbgBzAGkAdAB5ACWBdgH9BJj/ACWE2QAAAAD/AAAAAQAB////////////////AAAAFQAAAAIAAAABAAAAABQAYwBvAGcAZwBhAG4AXwB0AHMAcwAAABQAQgBpAGsAZQBTAHQAcgBlAHMAcwAAABQAQgBpAGsAZQBTAHQAcgBlAHMAcwAAABQAQgBpAGsAZQBTAHQAcgBlAHMAcwAAAAAAAQAAAAAAAAAAAAAAAAEAAH+qAAAAAAAAASgAAAAACHD34AAAAAH/////Af///////wAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAA+cAAA4Q/////wAAAAoAAAAAAAAAAAAAAAAMADIAIABQAGEAcgBtAAAAAAAAAAAAAA4QAAEAAAAA/////wAAAQQAIwAgAHQAeQBwAGUAIABpAG4AIABhACAAZgBvAHIAbQB1AGwAYQAgAHQAbwAgAHUAcwBlAAoAIwAgAGYAbwByACAAZQAuAGcALgAgAEIAaQBrAGUAUwB0AHIAZQBzAHMAIAAvACAARAB1AHIAYQB0AGkAbwBuAAoAIwAgAGEAcwAgAHkAbwB1ACAAdAB5AHAAZQAgAHQAaABlACAAYQB2AGEAaQBsAGEAYgBsAGUAIABtAGUAdAByAGkAYwBzAAoAIwAgAHcAaQBsAGwAIABiAGUAIABvAGYAZgBlAHIAZQBkACAAYgB5ACAAYQB1AHQAbwBjAG8AbQBwAGwAZQB0AGUACgAAAAEAAAAOAHMAZQBhAHIAYwBoADoAAAAAAAAAAAEBAAAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAAAQAAAAASAGMAbwBnAGcAYQBuAF8AaQBmAAAAGgBCAGkAawBlAEkAbgB0AGUAbgBzAGkAdAB5AAAAGgBCAGkAawBlAEkAbgB0AGUAbgBzAGkAdAB5AAAAGgBCAGkAawBlAEkAbgB0AGUAbgBzAGkAdAB5AAAAAAABAAAAAAAAAAAAAAAAAQAAf6oAAAAAAAABKAAAAAAIcPfgAAAAAgAAAAAB/////wAAAAAAAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAAMAAADhD/////AAAACgAAAAAAAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAAAAAADhAAAQAAAAD/////AAABBAAjACAAdAB5AHAAZQAgAGkAbgAgAGEAIABmAG8AcgBtAHUAbABhACAAdABvACAAdQBzAGUACgAjACAAZgBvAHIAIABlAC4AZwAuACAAQgBpAGsAZQBTAHQAcgBlAHMAcwAgAC8AIABEAHUAcgBhAHQAaQBvAG4ACgAjACAAYQBzACAAeQBvAHUAIAB0AHkAcABlACAAdABoAGUAIABhAHYAYQBpAGwAYQBiAGwAZQAgAG0AZQB0AHIAaQBjAHMACgAjACAAdwBpAGwAbAAgAGIAZQAgAG8AZgBmAGUAcgBlAGQAIABiAHkAIABhAHUAdABvAGMAbwBtAHAAbABlAHQAZQAKAAAAAQAAAA4AcwBlAGEAcgBjAGgAOgAAAAAAAAAAAQEAAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAAAAAM=" />
		<property name="useSelected" type="int" value="4" />
	</chart>
</layout>
<layout name="Power Duration" style="0" type="8" expression="isRide" trainswitch="0">
	<chart id="7" name="" title="CP History" >
		<property name="title" type="QString" value="CP History" />
		<property name="subtitle" type="QString" value="CP History" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Mon Feb 10 2014" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="AAAAFABDAFAAIABIAGkAcwB0AG8AcgB5AAAAHABMAGEAcwB0ACAAMQAyACAAbQBvAG4AdABoAHMAJYcuAAAAAP8AJYiaAAAAAP8AAAABAAH///////////////8AAAAVAAAABAAAAAEAAAAAFABjAHAAXwBzAGUAdAB0AGkAbgBnAAAAHABDAHIAaQB0AGkAYwBhAGwAIABQAG8AdwBlAHIAAAAcAEMAcgBpAHQAaQBjAGEAbAAgAFAAbwB3AGUAcgAAAAAAAAAAAAEAAAAAAAAAAAAAAAABAAB/3QAAAAAAAAE4AAAAAAS7yTD//////////wH//wEBAQEXFwAAAAAAAD/wAAAAAAAAAAAAAAH//wAAAAAAAAAAAAAAAAAAAAAAAAAOEP////8AAAAKAAAAAAAAAAAAAAAABgBjAHAAMgAAAAAAAAABAAAOEAABAAAAAAAAAAAAAAEEACMAIAB0AHkAcABlACAAaQBuACAAYQAgAGYAbwByAG0AdQBsAGEAIAB0AG8AIAB1AHMAZQAKACMAIABmAG8AcgAgAGUALgBnAC4AIABCAGkAawBlAFMAdAByAGUAcwBzACAALwAgAEQAdQByAGEAdABpAG8AbgAKACMAIABhAHMAIAB5AG8AdQAgAHQAeQBwAGUAIAB0AGgAZQAgAGEAdgBhAGkAbABhAGIAbABlACAAbQBlAHQAcgBpAGMAcwAKACMAIAB3AGkAbABsACAAYgBlACAAbwBmAGYAZQByAGUAZAAgAGIAeQAgAGEAdQB0AG8AYwBvAG0AcABsAGUAdABlAAoAAAABAAAADgBzAGUAYQByAGMAaAA6AAAAAAAAAAABAQAAAAAWAHAAbwB3AGUAcgBfAGkAbgBkAGUAeAAAAAYAAAAAEABDAFAAXwAoAGUAeAB0ACkAAAAAAAAAEABDAFAAIAAoAGUAeAB0ACkAAAAKAFcAYQB0AHQAcwAAAAAAAQAAAAAAAAAAAAAAAAEAAAAAAAB///SBlq4AAH////+osP//////////Af//yMi+vgAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAA+cAAA4Q/////wAAAAoAAAAAAAAAAAEAAAAGAGUAeAB0AAAAAQAAA+cAAA4QAAEAAAAA/////wAAAQQAIwAgAHQAeQBwAGUAIABpAG4AIABhACAAZgBvAHIAbQB1AGwAYQAgAHQAbwAgAHUAcwBlAAoAIwAgAGYAbwByACAAZQAuAGcALgAgAEIAaQBrAGUAUwB0AHIAZQBzAHMAIAAvACAARAB1AHIAYQB0AGkAbwBuAAoAIwAgAGEAcwAgAHkAbwB1ACAAdAB5AHAAZQAgAHQAaABlACAAYQB2AGEAaQBsAGEAYgBsAGUAIABtAGUAdAByAGkAYwBzAAoAIwAgAHcAaQBsAGwAIABiAGUAIABvAGYAZgBlAHIAZQBkACAAYgB5ACAAYQB1AHQAbwBjAG8AbQBwAGwAZQB0AGUACgAAAAEAAAAOAHMAZQBhAHIAYwBoADoAAAAAAAAAAAEBAAAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAABgAAAAAQAFcAJwBfACgAZQB4AHQAKQAAAAAAAAAQAFcAJwAgACgAZQB4AHQAKQAAAAwASgBvAHUAbABlAHMAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAC5W1AAAAAAAAAABj//////////wH//wAAz8/PzwAAAAAAAD/wAAAAAAAAAAAAAAH//wAAAAAAAAAAAAAAAAAAAAAAAAAOEP////8AAAAKAAAAAAAAAAAAAAAABgBlAHgAdAAAAAAAAAABAAAOEAABAAAAAP////8AAAEEACMAIAB0AHkAcABlACAAaQBuACAAYQAgAGYAbwByAG0AdQBsAGEAIAB0AG8AIAB1AHMAZQAKACMAIABmAG8AcgAgAGUALgBnAC4AIABCAGkAawBlAFMAdAByAGUAcwBzACAALwAgAEQAdQByAGEAdABpAG8AbgAKACMAIABhAHMAIAB5AG8AdQAgAHQAeQBwAGUAIAB0AGgAZQAgAGEAdgBhAGkAbABhAGIAbABlACAAbQBlAHQAcgBpAGMAcwAKACMAIAB3AGkAbABsACAAYgBlACAAbwBmAGYAZQByAGUAZAAgAGIAeQAgAGEAdQB0AG8AYwBvAG0AcABsAGUAdABlAAoAAAABAAAADgBzAGUAYQByAGMAaAA6AAAAAAAAAAABAQAAAAAWAHAAbwB3AGUAcgBfAGkAbgBkAGUAeAAAAAYAAAAAFgBwAC0ATQBhAHgAXwAoAGUAeAB0ACkAAAAAAAAAFgBwAC0ATQBhAHgAIAAoAGUAeAB0ACkAAAAKAFcAYQB0AHQAcwAAAAAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAGP//////////Af//VVX//wAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAAcAAAA4Q/////wAAAAoAAAAAAAAAAAEAAAAGAGUAeAB0AAAAAwAAAAEAAA4QAAEAAAAA/////wAAAQQAIwAgAHQAeQBwAGUAIABpAG4AIABhACAAZgBvAHIAbQB1AGwAYQAgAHQAbwAgAHUAcwBlAAoAIwAgAGYAbwByACAAZQAuAGcALgAgAEIAaQBrAGUAUwB0AHIAZQBzAHMAIAAvACAARAB1AHIAYQB0AGkAbwBuAAoAIwAgAGEAcwAgAHkAbwB1ACAAdAB5AHAAZQAgAHQAaABlACAAYQB2AGEAaQBsAGEAYgBsAGUAIABtAGUAdAByAGkAYwBzAAoAIwAgAHcAaQBsAGwAIABiAGUAIABvAGYAZgBlAHIAZQBkACAAYgB5ACAAYQB1AHQAbwBjAG8AbQBwAGwAZQB0AGUACgAAAAEAAAAOAHMAZQBhAHIAYwBoADoAAAAAAAAAAAEBAAAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAAAAAD" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="33" name="" title="CP" >
		<property name="title" type="QString" value="CP" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="filter" type="QString" value="search:" />
		<property name="mode" type="int" value="0" />
		<property name="showBest" type="bool" value="1" />
		<property name="showTest" type="bool" value="1" />
		<property name="filterBest" type="bool" value="0" />
		<property name="showPercent" type="bool" value="0" />
		<property name="showPowerIndex" type="bool" value="0" />
		<property name="showGrid" type="bool" value="1" />
		<property name="season" type="QString" value="" />
		<property name="cpmodel" type="int" value="3" />
		<property name="fit" type="int" value="0" />
		<property name="fitdata" type="int" value="0" />
		<property name="variant" type="int" value="0" />
		<property name="modelDecay" type="bool" value="0" />
		<property name="ani1" type="int" value="120" />
		<property name="ani2" type="int" value="300" />
		<property name="aei1" type="int" value="600" />
		<property name="aei2" type="int" value="3000" />
		<property name="sani1" type="int" value="20" />
		<property name="sani2" type="int" value="90" />
		<property name="laei1" type="int" value="4000" />
		<property name="laei2" type="int" value="30000" />
		<property name="showPP" type="bool" value="0" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Thu Aug 15 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="shading" type="int" value="1" />
		<property name="showEffort" type="bool" value="0" />
		<property name="showHeat" type="bool" value="0" />
		<property name="showHeatByDate" type="bool" value="0" />
		<property name="showCSLinear" type="bool" value="1" />
		<property name="shadeIntervals" type="int" value="0" />
		<property name="ridePlotMode" type="int" value="0" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="45" name="" title="ODPM" >
		<property name="title" type="QString" value="ODPM" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot; &quot;,\n&quot;description&quot;: &quot;Fit the odpm and plot it with residuals &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 2,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 1,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Model &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n        # raw data to fit with, just first 2hr:sl:n        mmp &lt;- head(meanmax(POWER),7200);:sl:n        secs &lt;- seq(1,length(mmp),1);:sl:n        multiuniq(mmp,secs);:sl:n:sl:n        # fit starting values, then LM fit the ODPM model to first hours:sl:n        cp &lt;- 200; W&lt;-11000; pmax &lt;- 1000; a&lt;-40;:sl:n        fit &lt;- lm( W:sl:/x*(1-exp(-x:sl:/(W:sl:/(pmax-cp)))) + cp - a*(log(x:sl:/1800))*(bool(x&gt;1800)), secs, mmp);:sl:n:sl:n        # success, generate prediction data:sl:n        if (fit[0] &lt;&gt; 0) { :sl:n            annotate(label, :qu:CP:qu:, round(cp));:sl:n            annotate(label, :qu:W&apos;:qu:, round(W));:sl:n :sl:n:sl:n            yy &lt;- sapply(secs, W:sl:/x*(1-exp(-x:sl:/(W:sl:/(pmax-cp)))) + cp - a*(log(x:sl:/1800))*(bool(x&gt;1800))); :sl:n:sl:n            ## time to exhaustion at 300w:sl:n            lbyy &lt;-yy; lbsecs&lt;-secs; multisort(ascend, lbyy,lbsecs);:sl:n            annotate(label, :qu:TTE:qu:, round(lbsecs[lowerbound(lbyy,cp)]:sl:/6):sl:/10);:sl:n        }:sl:n:sl:n    }:sl:n:sl:n    x { secs; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#010117&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Bests &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n        # raw data to fit with, just first 2hr:sl:n        mmp &lt;- head(meanmax(POWER),7200);:sl:n        secs &lt;- seq(1,length(mmp),1);:sl:n        multiuniq(mmp,secs);:sl:n    }:sl:n:sl:n    x { secs; }:sl:n    y { mmp; }:sl:n}:sl:n &quot;, &quot;line&quot;: 3, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#010112&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: false, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;seconds &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 1, &quot;maxx&quot;: 7200, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: true, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;watts &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 950, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#010117&quot;, &quot;axiscolor&quot;: &quot;#010117&quot;} ]\n}" />
	</chart>
	<chart id="45" name="" title="WKO4" >
		<property name="title" type="QString" value="WKO4" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot; &quot;,\n&quot;description&quot;: &quot;Peronnet Thibault Model, WKO4 Model is basically an unattributed rip-off &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 2,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 1,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Model &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n        # raw data to fit with, just first 2hr:sl:n        mmp &lt;- head(meanmax(POWER),10000);:sl:n        secs &lt;- seq(1,length(mmp),1);:sl:n        multiuniq(mmp,secs);:sl:n:sl:n        # fit starting values:sl:n        ftp &lt;- 200; frc&lt;-11000; pmax &lt;- 1000; a&lt;-40;:sl:n        tau2&lt;-50; tte&lt;-1800;:sl:n:sl:n        fit &lt;- lm((frc:sl:/x*(1-exp(-x:sl:/(frc:sl:/pmax)))) + ((ftp*(1-exp(-x:sl:/tau2))) - (bool(x&gt;tte)*(a*log(x:sl:/tte)))), secs,mmp);:sl:n:sl:n        # success, generate prediction data:sl:n        if (fit[0] &lt;&gt; 0) { :sl:n            annotate(label, :qu:Pmax:qu:, round(pmax));:sl:n            annotate(label, :qu:FTP:qu:, round(ftp));:sl:n            annotate(label, :qu:FRC:qu:, round(frc));:sl:n            annotate(label, :qu:TTE:qu:, round(tte)); :sl:n :sl:n            # cache the paramters so we can use them:sl:n            store(:qu:ftp:qu:,ftp);:sl:n            store(:qu:frc:qu:,frc);:sl:n            store(:qu:pmax:qu:,pmax);:sl:n            store(:qu:tte:qu:,tte);:sl:n            store(:qu:a:qu:,a);:sl:n            store(:qu:tau2:qu:,tau2);:sl:n            store(:qu:secs:qu:, secs);:sl:n:sl:n            # generate the model curve:sl:n            yy &lt;- sapply(secs, (frc:sl:/x*(1-exp(-x:sl:/(frc:sl:/pmax)))) + ((ftp*(1-exp(-x:sl:/tau2))) - (bool(x&gt;tte)*(a*log(x:sl:/tte))))); :sl:n:sl:n        }:sl:n:sl:n    }:sl:n:sl:n    x { round(secs); }:sl:n    y { round(yy); }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#ff0004&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Bests &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n        # raw data to fit with, just first 20 minutes:sl:n        mmp &lt;- head(meanmax(POWER),10000);:sl:n        secs &lt;- seq(1,length(mmp),1);:sl:n    }:sl:n:sl:n    x { round(secs); }:sl:n    y { round(mmp); }:sl:n}:sl:n &quot;, &quot;line&quot;: 3, &quot;symbol&quot;: 0, &quot;size&quot;: 3, &quot;color&quot;: &quot;#ffa71a&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: false, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;pFRC &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n            # cache the paramters so we can use them:sl:n            ftp &lt;- fetch(:qu:ftp:qu:);:sl:n            frc &lt;- fetch(:qu:frc:qu:);:sl:n            pmax&lt;- fetch(:qu:pmax:qu:);:sl:n            tte&lt;- fetch(:qu:tte:qu:);:sl:n            a&lt;- fetch(:qu:a:qu:);:sl:n            tau2&lt;- fetch(:qu:tau2:qu:);:sl:n            secs&lt;- fetch(:qu:secs:qu:);:sl:n:sl:n            # generate the model curve:sl:n            yy &lt;- sapply(secs, frc:sl:/x*(1-exp(-x:sl:/(frc:sl:/pmax)))); :sl:n:sl:n    }:sl:n:sl:n    x { round(secs); }:sl:n    y { round(yy); }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#113dff&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: false, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;pFTP &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n            # cache the paramters so we can use them:sl:n            ftp &lt;- fetch(:qu:ftp:qu:);:sl:n            frc &lt;- fetch(:qu:frc:qu:);:sl:n            pmax&lt;- fetch(:qu:pmax:qu:);:sl:n            tte&lt;- fetch(:qu:tte:qu:);:sl:n            a&lt;- fetch(:qu:a:qu:);:sl:n            tau2&lt;- fetch(:qu:tau2:qu:);:sl:n            secs&lt;- fetch(:qu:secs:qu:);:sl:n:sl:n            # generate the model curve:sl:n            yy &lt;- sapply(secs, ((ftp*(1-exp(-x:sl:/tau2))) - (bool(x&gt;tte)*(a*log(x:sl:/tte))))); :sl:n:sl:n    }:sl:n:sl:n    x { round(secs); }:sl:n    y { round(yy); }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#4bc045&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;seconds &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 1, &quot;maxx&quot;: 10000, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: true, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;watts &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 950, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#ff0004&quot;, &quot;axiscolor&quot;: &quot;#ff0004&quot;} ]\n}" />
	</chart>
	<chart id="39" name="" title="Power Profile (R)" >
		<property name="title" type="QString" value="Power Profile (R)" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="script" type="QString" value="library(fmsb)\nWeight=as.numeric(GC.athlete()[4])\nmmp &lt;- GC.season.meanmax(compare=FALSE)\nmm &lt;- mmp$wpk\n\ntime &lt;- seq(5, 3600, 1)\n\n\nlbltime&lt;-c(30,60,240,300,600,1200,3600,7200,5)\n\nlab&lt;-c(&quot;30s&quot;,&quot;1m&quot;,&quot;4m&quot;,&quot;5m&quot;,&quot;10m&quot;,&quot;20m&quot;,&quot;1h&quot;,&quot;2h&quot;,&quot;5s&quot;)\n\np_max &lt;- round(mmp$power[lbltime])\nppr&lt;-as.data.frame(t(p_max))\ncolnames(ppr)=lab\nppr=round((ppr/Weight),1)\n\nmax=c(15.1,11.5,7.4,7.2,6.8,6.2,5.6,4.7,23.1)\n\nppr=rev(ppr/max)\n\nppr &lt;- rbind(rep(1,10) , rep(0.4,10) , ppr)\n \nradarchart( ppr  , axistype=1 , \n     #custom polygon\n    pcol=&quot;cyan&quot; , pfcol=rgb(0.2,0.5,0.5,0.5) , plwd=2 , \n \n    #custom the grid\n    cglcol=&quot;red&quot;, cglty=1, axislabcol=&quot;green3&quot;, cglwd=1,caxislabels=seq(40,100,10),seg=6,\n title=paste(&quot;Cyclist profile:&quot;,GC.athlete()[1]),\n\nvlabels=rev(c(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;)),\n \n    #custom labels\n    vlcex=1\n    )\n\ntext(0.22,1.07,paste(&quot;P :&quot;,p_max[9],&quot;W\n\nPI : &quot;,round(ppr[3,1],3)*100),cex=1,col=&quot;dodgerblue1&quot;)\ntext(0,1.2,paste(&quot;5 sec.&quot;),cex=1.25,col=&quot;green3&quot;)\n\ntext(0.95,0.78,paste(&quot;P :&quot;,p_max[1],&quot;W\n\nPI : &quot;,round(ppr[3,9],3)*100),cex=1,col=&quot;dodgerblue1&quot;)\ntext(0.77,0.92,paste(&quot;30 sec.&quot;),cex=1.25,col=&quot;green3&quot;)\n\ntext(1.2,0.07,paste(&quot;P :&quot;,p_max[2],&quot;W\n\nPI : &quot;,round(ppr[3,8],3)*100),cex=1,col=&quot;dodgerblue1&quot;)\ntext(1.18,0.21,paste(&quot;1 min&quot;),cex=1.25,col=&quot;green3&quot;)\n\ntext(1,-0.75,paste(&quot;P :&quot;,p_max[3],&quot;W\n\nPI : &quot;,round(ppr[3,7],3)*100),cex=1,col=&quot;dodgerblue1&quot;)\ntext(1.07,-0.6,paste(&quot;4 min&quot;),cex=1.25,col=&quot;green3&quot;)\n\ntext(0.4,-1.18,paste(&quot;P :&quot;,p_max[4],&quot;W\n\nPI : &quot;,round(ppr[3,6],3)*100),cex=1,col=&quot;dodgerblue1&quot;)\ntext(0.4,-1.05,paste(&quot;5 min&quot;),cex=1.25,col=&quot;green3&quot;)\n\ntext(-0.4,-1.18,paste(&quot;P :&quot;,p_max[5],&quot;W\n\nPI : &quot;,round(ppr[3,5],3)*100),cex=1,col=&quot;dodgerblue1&quot;)\ntext(-0.4,-1.05,paste(&quot;10 min&quot;),cex=1.25,col=&quot;green3&quot;)\n\ntext(-1,-0.75,paste(&quot;P :&quot;,p_max[6],&quot;W\n\nPI : &quot;,round(ppr[3,4],3)*100),cex=1,col=&quot;dodgerblue1&quot;)\ntext(-1,-0.6,paste(&quot;20 min&quot;),cex=1.25,col=&quot;green3&quot;)\n\ntext(-1.2,0.08,paste(&quot;P :&quot;,p_max[7],&quot;W\n\nPI : &quot;,round(ppr[3,3],3)*100),cex=1,col=&quot;dodgerblue1&quot;)\ntext(-1.19,0.21,paste(&quot;60 min&quot;),cex=1.25,col=&quot;green3&quot;)\n\ntext(-0.9,0.78,paste(&quot;P :&quot;,p_max[8],&quot;W\n\nPI : &quot;,round(ppr[3,2],3)*100),cex=1,col=&quot;dodgerblue1&quot;)\ntext(-0.78,0.92,paste(&quot;2 H&quot;),cex=1.25,col=&quot;green3&quot;)" />
		<property name="state" type="QString" value="" />
		<property name="plotOnChart" type="bool" value="0" />
		<property name="showConsole" type="bool" value="0" />
	</chart>
	<chart id="39" name="" title="Fatigue Profile (R)" >
		<property name="title" type="QString" value="Fatigue Profile (R)" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="script" type="QString" value="##############################################################################\n## PULL THE ACTIVITY METRICS\n#GC.page(1024,1000)\nathlete = GC.athlete()\nmmp &lt;- GC.season.meanmax(compare=FALSE)\nint_duration &lt;- c(5,10,20, 30,60,120, 180,300,480, 1200,3600,5400)\nint_dur_str &lt;- c(&quot;NP-5s&quot;,&quot;NP-10s&quot;,&quot;NP-20s&quot;,&quot;AC-30s&quot;,&quot;AC-1m&quot;,&quot;AC-2m&quot;,&quot;VO2-3m&quot;,&quot;VO2-5m&quot;,&quot;VO2-8min&quot;,&quot;LT-20m&quot;,&quot;LT-1h&quot;,&quot;LT-1h30&quot;)\np_max &lt;- mmp$power[int_duration]			# max power data\np_max[c(11,12)] = mmp$IsoPower[int_duration[c(11,12)]]		# NP for 1h and 1h30\np_max_wpk &lt;- mmp$wpk[c(5,60,300,2500)]			# W/k data\n\n#p_max[1] = 1200\n#p_max[5] = 2000\n#p_max[8] = 2000\n#p_max[11] = 2000\n\n\nif (athlete$gender==&apos;male&apos;) \n{\n limits_5s &lt;- c(12.15,13.93,15.70,17.48,19.55,21.33,23.11)\n limits_1m &lt;- c(6.44, 7.13, 7.82, 8.51 , 9.32 , 10.1 , 10.7)\n limits_5m &lt;- c(3.05, 3.67, 4.29, 4.91 , 5.64 , 6.26 , 6.88)\n limits_1h &lt;- c(2.49, 3.02, 3.55, 4.09 , 4.71 , 5.24 , 5.78)\n}\n\ncategory_string &lt;- c(&quot;untrained&quot;,&quot;fair&quot;,&quot;moderate&quot;,&quot;good&quot;,&quot;very good&quot;,&quot;excellent&quot;,&quot;exceptional&quot;,&quot;world class&quot;)\ncategory_col &lt;- c(&quot;darkred&quot;  ,&quot;red&quot; ,&quot;orange&quot;,&quot;yellow&quot;,&quot;lightgreen&quot;,&quot;green4&quot;,&quot;darkgreen&quot;,&quot;purple&quot;)\n#c_border = c(&quot;white&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;)\n\np_max_5s = limits_5s*athlete$weight\np_max_1m = limits_1m*athlete$weight\np_max_5m = limits_5m*athlete$weight\np_max_1h = limits_1h*athlete$weight\n\n\nif (athlete$gender==&apos;male&apos;) \n{\n w_above_avg &lt;- c(0,0.15,0.20 ,0,0.10,0.15, 0,0.04,0.10, 0,0.02,0.05)\n above_avg   &lt;- c(0,0.22,0.35, 0,0.21,0.23, 0,0.08,0.18, 0,0.04,0.08)\n at_average  &lt;- c(0,0.31,0.47, 0,0.25,0.36, 0,0.15,0.24, 0,0.07,0.15)\n below_avg   &lt;- c(0,0.41,0.61, 0,0.31,0.50, 0,0.20,0.30, 0,0.11,0.25)\n}\np_ref = c(p_max[1],p_max[1],p_max[1],p_max[4],p_max[4],p_max[4],p_max[7],p_max[7],p_max[7],p_max[10],p_max[10],p_max[10])\np_w_above = p_ref*(1-w_above_avg)\np_above 	= p_ref*(1-above_avg)\np_at 	= p_ref*(1-at_average)\np_below 	= p_ref*(1-below_avg)\n\nc_plot = c(&quot;grey&quot;,&quot;white&quot;,&quot;white&quot;,&quot;grey&quot;,&quot;white&quot;,&quot;white&quot;,&quot;grey&quot;,&quot;white&quot;,&quot;white&quot;,&quot;grey&quot;,&quot;white&quot;,&quot;white&quot;)\nzone_nam &lt;-c(&quot;well above average&quot;,&quot;above average&quot;,&quot;average&quot;,&quot;below average&quot;,&quot;well below average&quot;)\nzone_col &lt;-c(&quot;green4&quot;,&quot;lightgreen&quot;,&quot;yellow&quot;,&quot;red&quot;,&quot;darkred&quot;)\nc_plot[p_max&gt;p_w_above] = zone_col[1]			# well above\nc_plot[p_max&lt;p_w_above&amp;p_max&gt;p_above] = zone_col[2]	# above\nc_plot[p_max&lt;p_above&amp;p_max&gt;p_at] = zone_col[3]		# average\nc_plot[p_max&lt;p_at&amp;p_max&gt;p_below]= zone_col[4]		# below \nc_plot[p_max&lt;p_below] = zone_col[5]			# well below\n\nc_border = c_plot\nc_border[1] =category_col[findInterval(p_max[1],p_max_5s)+1]\nc_border[5] =category_col[findInterval(p_max[5],p_max_1m)+1]\nc_border[8] =category_col[findInterval(p_max[8],p_max_5m)+1]\nc_border[11]=category_col[findInterval(p_max[11],p_max_1h)+1]\n\n\ntxt_sz =1.3\nopar &lt;- par(lwd = 5)\nx &lt;- barplot(p_max,names=int_dur_str, col=c_plot, ylim=c(0, max(p_max)*1.3),cex.axis=txt_sz, cex.names=txt_sz, border=c_border) \nopar &lt;- par(lwd = 1)\n\n#abline(h=p_ref,slope=0,col=&quot;white&quot;,lty=2)\ntitle(main=&quot;Power and Fatigue Profile&quot;,xlab=&quot;Interval Time&quot;,ylab=&quot;MaxPower(W)&quot;,cex.main=txt_sz*txt_sz,cex.lab=txt_sz)\n#legend(&quot;topright&quot;,title=&quot;sdf&quot;, col=&quot;white&quot;,c(&quot;reference int. time&quot;,zone_nam),fill=c(&quot;grey&quot;,zone_col))\n#legend(&quot;right&quot;,c(&quot;reference int. time&quot;,zone_nam),fill=c(&quot;grey&quot;,zone_col))\n\nlegend(&quot;topright&quot;, inset=.02, title=&quot;Bar Color: Fatigue Profile&quot;, c(&quot;fatigue reference interval&quot;,zone_nam), fill=c(&quot;grey&quot;,zone_col), horiz=FALSE, cex=txt_sz)\nlegend(&quot;top&quot;, inset=.02, title=&quot;Border Color: Power Profile&quot; ,category_string, fill=category_col, horiz=FALSE, cex=txt_sz)\n\nlines(x,p_w_above	,type=&quot;b&quot;,col=zone_col[1],lwd=2)\nlines(x,p_above	,type=&quot;b&quot;,col=zone_col[2],lwd=2)\nlines(x,p_at	,type=&quot;l&quot;,col=zone_col[3],lty=&quot;dotted&quot;,lwd=2)\nlines(x,p_below	,type=&quot;b&quot;,col=zone_col[4],lwd=2)\ntext(x,(max(p_max)-min(p_max))/7,paste0(round(p_max),&quot;W&quot;), pos=1, col=&quot;black&quot;,cex=txt_sz)#opar &lt;- par(lwd = 1)\n\nfor (cat in 1:7)\n{	\n lines(c(x[1]-0.5,x[1]+0.5),c(p_max_5s[cat],p_max_5s[cat]), col=&quot;black&quot;)\n text(x[1],p_max_5s[cat]-(p_max_5s[7]-p_max_5s[1])/14, category_string[cat], cex=txt_sz*1., col=&quot;black&quot;)\n lines(c(x[5]-0.5,x[5]+0.5),c(p_max_1m[cat],p_max_1m[cat]), col=&quot;black&quot;)\n text(x[5],p_max_1m[cat]-(p_max_1m[7]-p_max_1m[1])/14, category_string[cat], cex=txt_sz*1., col=&quot;black&quot;)\n lines(c(x[8]-0.5,x[8]+0.5),c(p_max_5m[cat],p_max_5m[cat]), col=&quot;black&quot;)\n text(x[8],p_max_5m[cat]-(p_max_5m[7]-p_max_5m[1])/14, category_string[cat], cex=txt_sz*1., col=&quot;black&quot;)\n lines(c(x[11]-0.5,x[11]+0.5),c(p_max_1h[cat],p_max_1h[cat]), col=&quot;black&quot;)\n text(x[11],p_max_1h[cat]-(p_max_1h[7]-p_max_1h[1])/14, category_string[cat], cex=txt_sz*1., col=&quot;black&quot;)\n}\ntext(x[1],p_max_5s[7]+(p_max_5s[7]-p_max_5s[1])/14, category_string[8], cex=txt_sz*1., col=&quot;black&quot;)\ntext(x[5],p_max_1m[7]+(p_max_1m[7]-p_max_1m[1])/14, category_string[8], cex=txt_sz*1., col=&quot;black&quot;)\ntext(x[8],p_max_5m[7]+(p_max_5m[7]-p_max_5m[1])/14, category_string[8], cex=txt_sz*1., col=&quot;black&quot;)\ntext(x[11],p_max_1h[7]+(p_max_1h[7]-p_max_1h[1])/14, category_string[8], cex=txt_sz*1.,col=&quot;black&quot;)\n\n\n## Summary Box Labels\ntext(x[1],(max(p_max)-min(p_max))/20, paste0(round(p_max[1]/athlete$weight,2),&quot;W/kg&quot; ),cex=txt_sz*0.8,col=&quot;darkblue&quot;)\ntext(x[5],(max(p_max)-min(p_max))/20, paste0(round(p_max[5]/athlete$weight,2),&quot;W/kg&quot; ),cex=txt_sz*0.8,col=&quot;darkblue&quot;)\ntext(x[8],(max(p_max)-min(p_max))/20, paste0(round(p_max[8]/athlete$weight,2),&quot;W/kg&quot; ),cex=txt_sz*0.8,col=&quot;darkblue&quot;)\ntext(x[11],(max(p_max)-min(p_max))/20,paste0(round(p_max[11]/athlete$weight,2),&quot;W/kg(NP)&quot; ),cex=txt_sz*0.8,col=&quot;darkblue&quot;)\ntext(x[4],p_max[1]*1.13,paste0(&quot;Name:   &quot;, athlete$name)			,cex=txt_sz*1.,col=&quot;yellow&quot;)\ntext(x[4],p_max[1]*1.10,paste0(&quot;Gender: &quot;, athlete$gender)			,cex=txt_sz*1.,col=&quot;yellow&quot;)\ntext(x[4],p_max[1]*1.07,paste0(&quot;Weight: &quot;, athlete$weight, &quot;kg&quot;)		,cex=txt_sz*1.,col=&quot;yellow&quot;)\n#text(x[6],p_max[1]*1.04,	,cex=txt_sz*1.,col=&quot;yellow&quot;)\n#text(x[6],p_max[1]*1.01,	,cex=txt_sz*1.,col=&quot;yellow&quot;)\n#text(x[6],p_max[1]*0.98,	,cex=txt_sz*1.,col=&quot;yellow&quot;)\n#text(x[6],p_max[1]*0.95,	,cex=txt_sz*1.,col=&quot;yellow&quot;)\n\n\n" />
		<property name="state" type="QString" value="" />
		<property name="plotOnChart" type="bool" value="0" />
		<property name="showConsole" type="bool" value="0" />
	</chart>
</layout>
<layout name="Triathlon" style="0" type="8" expression="" trainswitch="0">
	<chart id="47" name="" title="Overview" >
		<property name="title" type="QString" value="Overview" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="config" type="QString" value="{\n  &quot;version&quot;:&quot;2.0&quot;,\n  &quot;widths&quot;:[ 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200 ],\n  &quot;CHARTS&quot;:[\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:9,&quot;column&quot;:0,&quot;order&quot;:85,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((min(daterange(stop),Today)-daterange(start)+1):sl:/7,1); round(10*sum(metrics(Duration):sl:/3600):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;seconds&quot;,&quot;istime&quot;:0,&quot;start&quot;:7,&quot;stop&quot;:14,&quot;datafilter&quot;:&quot;filter: &quot;,&quot;name&quot;:&quot;Weekly Hours&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:0,&quot;order&quot;:88,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((min(daterange(stop),Today)-daterange(start)+1):sl:/7,1); round(10*sum(metrics(Activities)):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:Sport=\&quot;Strength\&quot; &quot;,&quot;name&quot;:&quot;Weekly Gym Activities&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:6,&quot;column&quot;:0,&quot;order&quot;:122,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- (min(daterange(stop),Today)-daterange(start)+1):sl:/7; round(10*sum(metrics(Duration):sl:/3600):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;seconds&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:2,&quot;datafilter&quot;:&quot;filter:Sport=\&quot;Strength\&quot; &quot;,&quot;name&quot;:&quot;Weekly Gym Hours&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:0,&quot;order&quot;:126,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;athlete_weight&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Average Weight&quot; },\n    { &quot;type&quot;:109,&quot;span&quot;:1,&quot;deep&quot;:11,&quot;column&quot;:0,&quot;order&quot;:130,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;workout_time&quot;,&quot;meta&quot;:&quot;Sport&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Time by Sport&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:0,&quot;order&quot;:201,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ round(max(estimates(cp2,cp))); } &quot;,&quot;units&quot;:&quot;watts&quot;,&quot;istime&quot;:0,&quot;start&quot;:200,&quot;stop&quot;:250,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Max Bike CP Estimate &quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:0,&quot;order&quot;:202,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ round(max(pmc(BikeStress, lts))); } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:50,&quot;stop&quot;:150,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Max Bike CTL&quot; },\n    { &quot;type&quot;:103,&quot;span&quot;:1,&quot;deep&quot;:9,&quot;column&quot;:1,&quot;order&quot;:2,&quot;color&quot;:&quot;#010161&quot;,&quot;series&quot;:3,&quot;polarized&quot;:0,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Heart Rate Zones&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:1,&quot;order&quot;:88,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((min(daterange(stop),Today)-daterange(start)+1):sl:/7,1); round(10*sum(metrics(Activities)):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Weekly Activities&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:6,&quot;column&quot;:1,&quot;order&quot;:89,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((min(daterange(stop),Today)-daterange(start)+1):sl:/7,1); round(sum(metrics(TriScore)):sl:/weeks); } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Weekly TriScore&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:1,&quot;order&quot;:118,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;TriRI&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Relative intensity&quot; },\n    { &quot;type&quot;:110,&quot;span&quot;:1,&quot;deep&quot;:28,&quot;column&quot;:1,&quot;order&quot;:127,&quot;color&quot;:&quot;#010161&quot;,&quot;xsymbol&quot;:&quot;activity_date&quot;,&quot;ysymbol&quot;:&quot;sRPE&quot;,&quot;zsymbol&quot;:&quot;triscore&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;All Activities by sRPE&quot; },\n    { &quot;type&quot;:103,&quot;span&quot;:1,&quot;deep&quot;:9,&quot;column&quot;:2,&quot;order&quot;:2,&quot;color&quot;:&quot;#010161&quot;,&quot;series&quot;:6,&quot;polarized&quot;:0,&quot;datafilter&quot;:&quot;filter:isSwim &quot;,&quot;name&quot;:&quot;Swim Pace Zones&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:2,&quot;order&quot;:11,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((min(daterange(stop),Today)-daterange(start)+1):sl:/7,1); round(10*sum(metrics(Activities)):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isSwim &quot;,&quot;name&quot;:&quot;Weekly Swim Activities&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:6,&quot;column&quot;:2,&quot;order&quot;:14,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((min(daterange(stop),Today)-daterange(start)+1):sl:/7,1); round(sum(metrics(Distance_Swim)):sl:/weeks); } &quot;,&quot;units&quot;:&quot;m&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isSwim &quot;,&quot;name&quot;:&quot;Weekly Swim Distance&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:2,&quot;order&quot;:16,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;swimscore_xpace&quot;,&quot;datafilter&quot;:&quot;filter:isSwim &quot;,&quot;name&quot;:&quot;Swim xPace&quot; },\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:28,&quot;column&quot;:2,&quot;order&quot;:73,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;total_distance&quot;,&quot;datafilter&quot;:&quot;filter:isSwim &quot;,&quot;name&quot;:&quot;Swims by Distance&quot; },\n    { &quot;type&quot;:103,&quot;span&quot;:1,&quot;deep&quot;:9,&quot;column&quot;:3,&quot;order&quot;:11,&quot;color&quot;:&quot;#010161&quot;,&quot;series&quot;:10,&quot;polarized&quot;:0,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Bike Power Zones&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:3,&quot;order&quot;:12,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((min(daterange(stop),Today)-daterange(start)+1):sl:/7,1); round(10*sum(metrics(Activities)):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Weekly Bike Activities&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:6,&quot;column&quot;:3,&quot;order&quot;:34,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((min(daterange(stop),Today)-daterange(start)+1):sl:/7,1); round(sum(metrics(Distance)):sl:/weeks); } &quot;,&quot;units&quot;:&quot;km&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Weekly Bike Distance&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:3,&quot;order&quot;:117,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;coggan_np&quot;,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Bike xPower&quot; },\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:28,&quot;column&quot;:3,&quot;order&quot;:118,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;total_distance&quot;,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Rides by Distance&quot; },\n    { &quot;type&quot;:103,&quot;span&quot;:1,&quot;deep&quot;:9,&quot;column&quot;:4,&quot;order&quot;:3,&quot;color&quot;:&quot;#010161&quot;,&quot;series&quot;:6,&quot;polarized&quot;:0,&quot;datafilter&quot;:&quot;filter:isRun &quot;,&quot;name&quot;:&quot;Run Pace Zones&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:4,&quot;order&quot;:8,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((min(daterange(stop),Today)-daterange(start)+1):sl:/7,1); round(10*sum(metrics(Activities)):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isRun &quot;,&quot;name&quot;:&quot;Weekly Run Activities&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:6,&quot;column&quot;:4,&quot;order&quot;:33,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((min(daterange(stop),Today)-daterange(start)+1):sl:/7,1); round(sum(metrics(Distance)):sl:/weeks); } &quot;,&quot;units&quot;:&quot;km&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isRun &quot;,&quot;name&quot;:&quot;Weekly Run Distance&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:4,&quot;order&quot;:35,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;xPace&quot;,&quot;datafilter&quot;:&quot;filter:isRun &amp;&amp; Workout_Code&lt;&gt;\&quot;Walk\&quot; &quot;,&quot;name&quot;:&quot;Run xPace&quot; },\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:28,&quot;column&quot;:4,&quot;order&quot;:36,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;total_distance&quot;,&quot;datafilter&quot;:&quot;filter:isRun &quot;,&quot;name&quot;:&quot;Runs by Distance&quot; }\n  ]\n}\n" />
		<property name="minimumColumns" type="int" value="5" />
	</chart>
	<chart id="7" name="" title="PMC (TriScore)" >
		<property name="title" type="QString" value="PMC (TriScore)" />
		<property name="subtitle" type="QString" value="PMC (TriScore)" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="1" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Sun Feb 7 2016" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="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" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="7" name="" title="VO2 Scores" >
		<property name="title" type="QString" value="VO2 Scores" />
		<property name="subtitle" type="QString" value="VO2 Scores" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="1" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Sun Dec 20 2020" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="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" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="33" name="" title="Run CV" >
		<property name="title" type="QString" value="Run CV" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="filter" type="QString" value="filter:isRun" />
		<property name="mode" type="int" value="5" />
		<property name="showBest" type="bool" value="1" />
		<property name="showTest" type="bool" value="1" />
		<property name="filterBest" type="bool" value="0" />
		<property name="showPercent" type="bool" value="0" />
		<property name="showPowerIndex" type="bool" value="0" />
		<property name="showGrid" type="bool" value="1" />
		<property name="season" type="QString" value="" />
		<property name="cpmodel" type="int" value="3" />
		<property name="fit" type="int" value="0" />
		<property name="fitdata" type="int" value="0" />
		<property name="variant" type="int" value="0" />
		<property name="modelDecay" type="bool" value="0" />
		<property name="ani1" type="int" value="120" />
		<property name="ani2" type="int" value="300" />
		<property name="aei1" type="int" value="420" />
		<property name="aei2" type="int" value="1800" />
		<property name="sani1" type="int" value="20" />
		<property name="sani2" type="int" value="90" />
		<property name="laei1" type="int" value="4000" />
		<property name="laei2" type="int" value="30000" />
		<property name="showPP" type="bool" value="0" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Fri Apr 17 2015" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="shading" type="int" value="1" />
		<property name="showEffort" type="bool" value="0" />
		<property name="showHeat" type="bool" value="0" />
		<property name="showHeatByDate" type="bool" value="0" />
		<property name="showCSLinear" type="bool" value="1" />
		<property name="shadeIntervals" type="int" value="1" />
		<property name="ridePlotMode" type="int" value="0" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="33" name="" title="Swim CV" >
		<property name="title" type="QString" value="Swim CV" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="filter" type="QString" value="filter:isSwim" />
		<property name="mode" type="int" value="5" />
		<property name="showBest" type="bool" value="1" />
		<property name="showTest" type="bool" value="1" />
		<property name="filterBest" type="bool" value="0" />
		<property name="showPercent" type="bool" value="0" />
		<property name="showPowerIndex" type="bool" value="0" />
		<property name="showGrid" type="bool" value="1" />
		<property name="season" type="QString" value="" />
		<property name="cpmodel" type="int" value="3" />
		<property name="fit" type="int" value="0" />
		<property name="fitdata" type="int" value="0" />
		<property name="variant" type="int" value="0" />
		<property name="modelDecay" type="bool" value="0" />
		<property name="ani1" type="int" value="120" />
		<property name="ani2" type="int" value="300" />
		<property name="aei1" type="int" value="420" />
		<property name="aei2" type="int" value="1800" />
		<property name="sani1" type="int" value="20" />
		<property name="sani2" type="int" value="90" />
		<property name="laei1" type="int" value="4000" />
		<property name="laei2" type="int" value="30000" />
		<property name="showPP" type="bool" value="0" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Tue May 10 2022" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="shading" type="int" value="1" />
		<property name="showEffort" type="bool" value="0" />
		<property name="showHeat" type="bool" value="0" />
		<property name="showHeatByDate" type="bool" value="0" />
		<property name="showCSLinear" type="bool" value="1" />
		<property name="shadeIntervals" type="int" value="1" />
		<property name="ridePlotMode" type="int" value="0" />
		<property name="useSelected" type="int" value="0" />
	</chart>
	<chart id="7" name="" title="Weekly Distance" >
		<property name="title" type="QString" value="Weekly Distance" />
		<property name="subtitle" type="QString" value="Distance" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="1" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Sun Dec 20 2020" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="/////wAAABwATABhAHMAdAAgADEAMgAgAG0AbwBuAHQAaABzACWHLAAAAAD/ACWImgAAAAD/AAAAAgAB////////////////AAAAFQAAAAMAAAAIAP////8AAAAAAAAACABTAHcAaQBtAAAABABrAG0AAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAADI1pgAAAAAAwZvUAAAAAB/////wH//6qq/////wAAAAAAAD/wAAAAAAAAAAAAAAH//wAAAAAAAAAAAAAAAAAAAAPnAAAOEP////8AAAAKAAAABAAAAAAAAAAADAAyACAAUABhAHIAbQAAAAAAAAPnAAAOEAABAAAAAP////8AAAAyACMAIABTAHcAaQBtAAoARABpAHMAdABhAG4AYwBlAF8AUwB3AGkAbQAvADEAMAAwADAAAAAAAAAAIABmAGkAbAB0AGUAcgA6AGkAcwBTAHcAaQBtADwAPgAwAAAAAAAAAAABAQD/////AAAACAD/////AAAAAAAAAAgAQgBpAGsAZQAAAAQAawBtAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAyNaYAAAAAAMGb1AAAAAAf////8B//9VVf//f38AAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAD5wAADhD/////AAAACgAAAAQAAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAD5wAADhAAAQAAAAD/////AAAAHgAjACAAQgBpAGsAZQAKAEQAaQBzAHQAYQBuAGMAZQAAAAAAAAAmAGYAaQBsAHQAZQByADoAUwBwAG8AcgB0AD0AIgBCAGkAawBlACIAAAAAAAAAAAEBAP////8AAAAIAP////8AAAAAAAAABgBSAHUAbgAAAAQAawBtAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAyNaYAAAAAAMGb1AAAAAAf////8B/////6qqf38AAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAD5wAADhD/////AAAACgAAAAQAAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAD5wAADhAAAQAAAAD/////AAAAHAAjACAAUgB1AG4ACgBEAGkAcwB0AGEAbgBjAGUAAAAAAAAAHgBmAGkAbAB0AGUAcgA6AGkAcwBSAHUAbgA8AD4AMAAAAAAAAAAAAQEA/////wAAAAAAAw==" />
		<property name="useSelected" type="int" value="0" />
	</chart>
	<chart id="39" name="" title="Run Profile (R)" >
		<property name="title" type="QString" value="Run Profile (R)" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="script" type="QString" value="## CHART SIZING\nGC.page(width=800, height=600)\n\n## PULL THE ACTIVITY METRICS FROM GC RECORDS\nmm &lt;- GC.season.meanmax(all=FALSE, filter=&quot;isRun&lt;&gt;0&quot;, compare=FALSE)\nathlete &lt;- GC.athlete()\nseasons &lt;- GC.season(compare=TRUE)\n\n## MANIPULATE THE DATA\n# mean maximal speed in m/s from 1s to 1h30&apos; (OJO con el ultimo ****)\nspeed &lt;- mm$speed[2:12000]/3.6\n# pace from speed in min/km\npace &lt;- (1000/60)/speed\n# distance from mean maximal speed\ndistance &lt;- round(speed*(1:length(pace))/1000,1)\n\ndistance.value &lt;- c(0, 0.4, 0.8, 1.5, 5, 10, 21.1, 42.2)\ndistance.name &lt;-c (&quot;&quot;, &quot;400m&quot;, &quot;800m&quot;, &quot;1500m&quot;, &quot;5k&quot;, &quot;10k&quot;, &quot;1/2 Mar&quot;, &quot;Marathon&quot;)\n\ndf.working &lt;- data.frame(distance, pace, speed)\ndf.working &lt;- subset(df.working, distance==distance.value)\ndf.working &lt;- aggregate(.~distance, df.working, mean)\nnames(df.working)[names(df.working)==&quot;distance&quot;] &lt;- &quot;distance.value&quot;\n\n## Account for Different Genders\nifelse (athlete$gender==&apos;male&apos;, index.TOP&lt;-c(NA, 9.26, 7.93, 7.28, 6.6, 6.34, 6.02, 5.72), index.TOP&lt;-c(NA, 8.4, 7.06, 6.52, 5.87, 5.4, 5.19))\nifelse (athlete$gender==&apos;male&apos;, index.BOT&lt;-c(NA, 3.27, 2.8, 2.57, 2.33, 2.24, 2.13, 2.02), index.BOT&lt;-c(NA, 2.97, 2.5, 2.3, 2.08, 1.91, 1.84))\n\n## Build the DataFrame\ndf.final &lt;- data.frame(distance.value, distance.name)\ndf.final &lt;- merge(df.final, df.working, all.x=TRUE)\nindex &lt;-((df.final$speed-index.BOT)/(index.TOP-index.BOT))*10\ndf.final &lt;- cbind(df.final, index)\n\n## Round the Numbers to make the frame more readable\ndf.final$pace &lt;- round(df.final$pace, 2)\ndf.final$speed &lt;- round(df.final$speed, 2)\ndf.final$index &lt;- round(df.final$index, 2)\n\n## Remove Wacky Values off the Scale\ndf.final$index &lt;- ifelse(df.final$index&lt;0, NA, df.final$index)\ndf.final$index &lt;- ifelse(df.final$index&gt;10, NA, df.final$index)\n\n## Athlete Phenotype\npheno.lbl &lt;- c(NA, &quot;1. T-MD&quot;, &quot;1. T-MD&quot;, &quot;2. T-LD&quot;, &quot;2. T-LD&quot;, &quot;2. T-LD&quot;, &quot;3. Mar&quot;, &quot;3. Mar&quot;)\ndf.pheno &lt;- data.frame(pheno.lbl, df.final$index)\ndf.pheno &lt;- aggregate(.~pheno.lbl, df.pheno, max, na.rm=TRUE, na.action=&quot;na.pass&quot;)\n# df.pheno[ is.na(df.pheno) ] &lt;- NA \n# df.pheno[which(!is.finite(df.pheno))] &lt;- NA\nis.na(df.pheno)&lt;-sapply(df.pheno, is.infinite)\ndf.pheno[is.na(df.pheno)]&lt;-NA\n\npheno.allrounderband = 1\npheno.best &lt;- which(df.pheno$frame.index==max(df.pheno$frame.index, na.rm=TRUE))\n\nif (sum(is.na(df.pheno$frame.index))&gt;0) {\n  phenotype=&quot;Not Enough Datapoints&quot;\n} else if (max(df.pheno$frame.index, na.rm=TRUE)-min(df.pheno$frame.index, na.rm=TRUE)&lt;pheno.allrounderband) {\n  phenotype=&quot;All-Rounder&quot;\n} else if (pheno.best==1) {\n  phenotype&lt;-&quot;Track - Middle Distance&quot;\n} else if (pheno.best==2) {\n  phenotype&lt;-&quot;Track - Long Distance&quot;\n} else\n  phenotype&lt;-&quot;Marathoner&quot;\n\n## CHART INPUTS &amp; SETTINGS\nchart.lbl.yaxis&lt;-c(&quot;Untrained&quot;, &quot;Novice&quot;, &quot;Fair&quot;, &quot;Moderate&quot;, &quot;Good&quot;, &quot;Very Good&quot;, &quot;NCAA Div.3&quot;, &quot;NCAA Div.1&quot;, &quot;World Class&quot;)\nchart.lbl.sub = &quot;Run Distance&quot;\nchart.lbl.title = paste0(&quot;Runner Pace Profile &quot;, &quot; (&quot;, seasons$name, &quot;)&quot;)\nchart.in.textsize=1\nchart.in.chart.color1=&quot;Red&quot;\nchart.in.chart.color2=&quot;White&quot;\nchart.indices.posy&lt;-c(0, 0.87, 1.9, 3.08, 4.39, 5.74, 7.01, 7.98, 10)\n\n## Bar Value Labels\nchart.lbl.posx&lt;-c(0.8, 2, 3.2, 4.4, 5.6, 6.8, 8, 9.2)-0.15\nchart.lbl.posy&lt;-c(df.final$index-0.3)\nchart.in.textscale = 0.9\n\n## Make the M:SS Labels\nchart.lbl.val.minute &lt;- as.integer(df.final$pace)\nchart.lbl.val.second &lt;- round((df.final$pace-as.integer(df.final$pace))*60, 0)\nchart.lbl.val.second &lt;- sprintf(&quot;%02i&quot;, chart.lbl.val.second)\nchart.lbl.val.pace &lt;- paste0(chart.lbl.val.minute, &quot;:&quot;, chart.lbl.val.second, &quot;/km&quot;)\n\n## Total Event Time Labels\nchart.lbl.val.totaltime &lt;- (df.final$pace*df.final$distance.value)/1440\nchart.lbl.val.totaltime &lt;- format(as.POSIXct(Sys.Date() + chart.lbl.val.totaltime), &quot;%H:%M:%S&quot;, tz=&quot;UTC&quot;)\n\n## Summary Box Labels\nchart.summarybox.text &lt;- c(paste0(&quot;Athlete: &quot;, athlete$name), paste0(&quot;Gender: &quot;, athlete$gender), paste0(&quot;Weight: &quot;, athlete$weight, &quot;kg&quot;), paste0(&quot;Phenotype: &quot;, phenotype))\nchart.summarybox.posy &lt;- c(9.6, 9.2, 8.8, 8.4)\n\n## PLOT THE CHART\n## BarPlot\nbarplot(rep(NA, length(df.final$index)),\n        xlim=c(0, 9.6),\n        ylim=c(0, 10),\n        main=chart.lbl.title,\n        cex.main=1.5,\n        font.main=2,\n        sub=chart.lbl.sub,\n        font.xlab=2,\n        col=heat.colors(9),\n        names.arg=df.final$distance.name,\n        yaxt=&apos;n&apos;,\n        space=0.2,\n        col.axis=chart.in.chart.color2,\n        col.sub=chart.in.chart.color2)\n\n## Reference Lines\nabline(h=chart.indices.posy, slope=0, col=&quot;gray50&quot;, lty=3)\ntext(0.42, chart.indices.posy+(0.2), chart.lbl.yaxis, cex=chart.in.textsize, col=chart.in.chart.color2)\nabline(h=10, slope=0, col=&quot;gray50&quot;, lty=3)\ntext(0.42, 10-(0.3), &quot;World Record&quot;, cex=chart.in.textsize, col=chart.in.chart.color2)\n\n## Plot the Barplot over the Reference Lines\nbarplot(df.final$index,\n        add=T,\n        col=heat.colors(9),\n        yaxt=&apos;n&apos;,\n        border=FALSE)\n\n## Bar Value Labels\ntext(chart.lbl.posx, chart.lbl.posy, chart.lbl.val.pace, col=&quot;black&quot;, cex=chart.in.textsize*chart.in.textscale)\ntext(chart.lbl.posx, chart.lbl.posy-0.4, chart.lbl.val.totaltime, col=&quot;black&quot;, cex=chart.in.textsize*chart.in.textscale)\n\n## Summary Box Labels\ntext(8.5, chart.summarybox.posy, chart.summarybox.text, cex=chart.in.textsize*chart.in.textscale, col=chart.in.chart.color1)\n\nprint(df.pheno)\nprint(df.final)\nprint(df.working)" />
		<property name="state" type="QString" value="" />
		<property name="plotOnChart" type="bool" value="0" />
		<property name="showConsole" type="bool" value="0" />
	</chart>
	<chart id="39" name="" title="Tri Mix (R)" >
		<property name="title" type="QString" value="Tri Mix (R)" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="script" type="QString" value="## R-chart script.\n## For use with GoldenCheetah.\n## tested on GC.version() is &quot;DEV-V3.5 1705&quot;\n##\n\npie=TRUE ##FALSE\nsportlist=c(&quot;Swim&quot;,&quot;Bike&quot;, &quot;Run&quot;, &quot;Strength&quot;)\neco=c(3, 1/5, 1, 0)\ncolor=c(&quot;#578cb5&quot;,&quot;#85a67a&quot;, &quot;#ffaa7f&quot;,&quot;#ffd64d&quot;)\n\npar(mfrow=c(2,2), mar=c(3,3,3,3))\n##layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE), widths=c(1,1), heights=c(1,1))\n\n##Get metrics\nmetrics&lt;- GC.season.metrics(all=FALSE, filter=&quot;&quot;, compare=FALSE)\n\n##Filter Walks\n#metrics&lt;-metrics[metrics$Workout_Code!=&quot;Walk&quot;,]\n\n##Count Weeks\nweeks &lt;- 1\nif (length(metrics$date)&gt;0) {\n    weeks &lt;- max( (as.numeric(metrics$date[length(metrics$date)]-metrics$date[1])+1)/7, 1)\n}\n\nmetriclist&lt;- c()\ntrg&lt;- c();time&lt;-c();distance&lt;-c()\nfor(a in 1:length(sportlist)) {\n    metriclist[[a]]&lt;-metrics[which(metrics$Sport==sportlist[a]),]\n    trg[a]&lt;-length(metriclist[[a]]$Sport)\n    if (trg[a]&gt;0) {\n        time[a]&lt;-Reduce(&quot;+&quot;,metriclist[[a]]$Duration)\n        distance[a]&lt;-Reduce(&quot;+&quot;,metriclist[[a]]$Distance)\n    } else {\n        time[a]&lt;-0\n        distance[a]&lt;-0\n    }\n}\n\ntrg&lt;-trg/weeks\ntime[is.na(time)]&lt;-0\ntime&lt;-time%/%weeks\ndistance[is.na(distance)]&lt;-0\ndistance&lt;-distance/weeks\n\nheader1&lt;-sprintf(&quot;Activities (%.1f/wk)&quot;, sum(trg))\nheader2&lt;-sprintf(&quot;Duration (%d:%02d:%02d/wk)&quot;, sum(time)%/%3600, sum(time)%/%60%%60, sum(time)%%60)\nheader3&lt;-sprintf(&quot;Distance (ECO %.1f/wk)&quot;, sum(distance*eco))\n\nif (pie==TRUE){\n	pie(trg, labels=sprintf(&quot;%s %.1f&quot;,sportlist,trg), main=header1, col=color)\n	pie(time, labels=sprintf(&quot;%s %d:%02d:%02d&quot;,sportlist,time%/%3600,time%/%60%%60,time%%60), main=header2, col=color)\n	pie(distance*eco, labels=sprintf(&quot;%s %.1f km (%.1f)&quot;,sportlist,distance,distance*eco), main=header3, col=color)\n	plot.new()\n	}else{\n	barplot(trg, names.arg=sprintf(&quot;%s %.1f&quot;,sportlist,trg), main=header1, col=color, space=0, axes=FALSE)\n	barplot(time, names.arg=sprintf(&quot;%s %d:%02d:%02d&quot;,sportlist,time%/%3600,time%/%60%%60,time%%60), main=header2, col=color, space=0, axes=FALSE)\n	barplot(distance*eco, names.arg=sprintf(&quot;%s %.1f&quot;,sportlist,distance), main=header3, col=color, space=0, axes=FALSE)\n	plot.new()\n	}\n\ntitle&lt;-sprintf(&quot;%s (%.1f weeks)&quot;, GC.season()$name, weeks)\nlegend(x=&quot;center&quot;, title=title, legend=sportlist, fill=color, border=&quot;white&quot;,  cex=2, bty=&quot;n&quot;)\n##plot.new()\n" />
		<property name="state" type="QString" value="" />
		<property name="plotOnChart" type="bool" value="0" />
		<property name="showConsole" type="bool" value="0" />
	</chart>
</layout>
<layout name="Measures" style="0" type="8" expression="" trainswitch="0">
	<chart id="45" name="" title="Weight History" >
		<property name="title" type="QString" value="Weight History" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot; &quot;,\n&quot;description&quot;: &quot;Plotting weight :qu:quotes:qu: and :qu:escaped quotes:qu: &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 2,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 2,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Body Fat &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;Percent &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n       xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n       yy &lt;- measures(:qu:Body:qu:, :qu:FATPERCENT:qu:);:sl:n       indexes &lt;- nonzero(yy);:sl:n:sl:n       annotate(lr,dot,:qu:gold:qu:);:sl:n    }:sl:n:sl:n    x { xx[indexes]; }:sl:n    y { yy[indexes]; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 1, &quot;size&quot;: 2, &quot;color&quot;: &quot;#010112&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: false, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Weight &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;KG &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n       xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n       yy &lt;- measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:);:sl:n:sl:n       annotate(lr,dot,:qu:magenta:qu:);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 1, &quot;size&quot;: 2, &quot;color&quot;: &quot;#01011c&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;Date &quot;, &quot;type&quot;: 1, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;Percent &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 30, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#010112&quot;, &quot;axiscolor&quot;: &quot;#010112&quot;},\n{ &quot;name&quot;: &quot;KG &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 100, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#01011c&quot;, &quot;axiscolor&quot;: &quot;#01011c&quot;} ]\n}" />
	</chart>
	<chart id="45" name="" title="Weight Trend" >
		<property name="title" type="QString" value="Weight Trend" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot;Linear trend and weekly averages &quot;,\n&quot;description&quot;: &quot;:qu:Per week:qu: is the linear trend slope times 7 &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 2,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 2,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Linear &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;Kg &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n        fit &lt;- lr(xx, measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:));:sl:n        yy &lt;- fit[0]*xx+fit[1];:sl:n        annotate(label, :qu:Per Week:qu:, round(70*fit[0]):sl:/10);:sl:n    }:sl:n    x { xx; }:sl:n    y { yy; }:sl:n} &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#bfbf00&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Weekly &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;Kg &quot;, &quot;program&quot;: &quot;{:sl:n    relevant { length(measures(:qu:Body:qu:, :qu:date:qu:))&gt;=7; }:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n        weeks &lt;- week(xx);:sl:n        weekly &lt;- aggregate(measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:), weeks, mean);:sl:n        yy &lt;- weekly[weeks-weeks[0]];:sl:n        annotate(label, :qu:Weeks:qu:, round(10*(max(xx)-min(xx)+1):sl:/7):sl:/10);:sl:n    }:sl:n    x { xx; }:sl:n    y { yy; }:sl:n} &quot;, &quot;line&quot;: 2, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#8bd0d0&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Daily &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;Kg &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        avg &lt;- mean(measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:));:sl:n        annotate(label, :qu:Average:qu:, round(10*avg):sl:/10);:sl:n    }:sl:n    x { measures(:qu:Body:qu:, :qu:date:qu:); }:sl:n    y { measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:); }:sl:n}:sl:n &quot;, &quot;line&quot;: 2, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#8bcf67&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: false, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;Date &quot;, &quot;type&quot;: 1, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;Kg &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 65, &quot;maxy&quot;: 80, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#bfbf00&quot;, &quot;axiscolor&quot;: &quot;#bfbf00&quot;} ]\n}" />
	</chart>
	<chart id="7" name="" title="HRV &amp; Rest HR" >
		<property name="title" type="QString" value="HRV &amp; Rest HR" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Tue May 10 2022" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="/////wAAABwATABhAHMAdAAgADEAMgAgAG0AbwBuAHQAaABzACWHLwAAAAD/ACWImwAAAAD/AAAAAQAB////////////////AAAAFQAAAAIAAAAJAAAAACoASAByAHYAXwAtAF8AUgBlAGMAbwB2AGUAcgB5AF8AUABvAGkAbgB0AHMAAAAmAEgAUgBWACAAUgBlAGMAbwB2AGUAcgB5ACAAUABvAGkAbgB0AHMAAAAqAEgAcgB2ACAALQAgAFIAZQBjAG8AdgBlAHIAeQAgAFAAbwBpAG4AdABzAAAAFABSAGUAYwAuAFAAbwBpAG4AdABzAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAABuAAAAWwAAAAAAAAAA//////////8B/////wAAAAAAAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAABwAADhD/////AAAACgAAAAEAAAAAAQAAAAwAMgAgAFAAYQByAG0AAAAAAAAAAAAADhAAAAAAAAAAAAAAAAAA9gAjACAAdAB5AHAAZQAgAGkAbgAgAGEAIABmAG8AcgBtAHUAbABhACAAdABvACAAdQBzAGUACgAjACAAZgBvAHIAIABlAC4AZwAuACAAVABTAFMAIAAvACAARAB1AHIAYQB0AGkAbwBuAAoAIwAgAGEAcwAgAHkAbwB1ACAAdAB5AHAAZQAgAHQAaABlACAAYQB2AGEAaQBsAGEAYgBsAGUAIABtAGUAdAByAGkAYwBzAAoAIwAgAHcAaQBsAGwAIABiAGUAIABvAGYAZgBlAHIAZQBkACAAYgB5ACAAYQB1AHQAbwBjAG8AbQBwAGwAZQB0AGUACgAAAAEAAAAOAHMAZQBhAHIAYwBoADoAAAABAAAABwEBAAAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAACQAAAAAQAEgAcgB2AF8ALQBfAEgAUgAAAA4AUgBlAHMAdAAgAEgAUgAAABAASAByAHYAIAAtACAASABSAAAABgBiAHAAbQAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAbgAAAFsAAAAAAAAAAP//////////Af//rKysrAAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAAAAAAA4Q/////wAAAAoAAAABAAAAAAEAAAAGAGMAcAAyAAAABAAAAAAAAA4QAAAAAAAAAAAABgBiAHAAbQAAAPYAIwAgAHQAeQBwAGUAIABpAG4AIABhACAAZgBvAHIAbQB1AGwAYQAgAHQAbwAgAHUAcwBlAAoAIwAgAGYAbwByACAAZQAuAGcALgAgAFQAUwBTACAALwAgAEQAdQByAGEAdABpAG8AbgAKACMAIABhAHMAIAB5AG8AdQAgAHQAeQBwAGUAIAB0AGgAZQAgAGEAdgBhAGkAbABhAGIAbABlACAAbQBlAHQAcgBpAGMAcwAKACMAIAB3AGkAbABsACAAYgBlACAAbwBmAGYAZQByAGUAZAAgAGIAeQAgAGEAdQB0AG8AYwBvAG0AcABsAGUAdABlAAoAAAABAAAADgBzAGUAYQByAGMAaAA6AAAAAQAAAAEBAQAAAAAWAHAAbwB3AGUAcgBfAGkAbgBkAGUAeAAAAAAAAw==" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="44" name="" title="HRV Trends" >
		<property name="title" type="QString" value="HRV Trends" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="script" type="QString" value="##\n## Python program will run on selection.\n##\n\n## This chart plots 7-day moving averages against a \n# band of &quot;normal values&quot; derived by taking the 60-day\n# moving average and subtracting (for the floor) and \n# adding (for the ceiling) 0.75 standard devations to \n# it. \n#\n# Currently this chart uses HRV4Training recovery points.\n# \n# If you want to use rMSSD values instead, make sure you\n# apply a natural log as per recommendation in this forum\n# post:\n# \n# https://forum.trainerroad.com/t/anyone-using-hrv-heart-rate-variability/5664/188?u=cyclhist\n#\n# For the science behind this plot, see: \n#\n# https://www.hrv4training.com/blog/training-prescription-guided-by-heart-rate-variability\n#\n# Thanks to Marco Altini for his work and help!\n\n## BEGINNING OF CONFIGURATION\n\n# The baseline is a moving average of the following \n# number of days\n\nBASELINE_DAYS=7\n\n# The band for the normal range is calculates as a \n# moving average of the following number of days \n# +/- 0.75 standard deviations.\n\nNORMALRANGE_DAYS=60 \n\n# The following variable determines the Training Stress \n# metric. This could be BikeStress, or TSS, or your own\n# metric that tries to compensate for missing power data\n# with HR data somehow. I use BikeStress here. If you use\n# Duration, the plot will chart hours rather than the \n# seconds in the dataset. In that case, you might want \n# to adjust the range on the second yaxis in the code \n# below.\n\nTRAINING_STRESS=&quot;TriScore&quot;\n\n## END OF CONFIGURATION \n\nimport os\nimport tempfile\nimport pandas as pd\nimport plotly\nfrom plotly.graph_objs import Scatter, Layout, Bar, Figure\n\n## Delete old chart\ntry:\n    os.remove(tempfile.gettempdir() + &quot;/temp-plot.html&quot;)\nexcept:\n    pass\n\n## Let&apos;s get dates and recovery points\nmeasuresHistoryWithZeros = pd.DataFrame(GC.seasonMeasures(all = True, group=&quot;Hrv&quot;))[[&quot;date&quot;, &quot;RECOVERY_POINTS&quot;]]\n\nmeasuresSelectionWithZeros = pd.DataFrame(GC.seasonMeasures(all = False, group=&quot;Hrv&quot;))[[&quot;date&quot;, &quot;RECOVERY_POINTS&quot;]]\n\n# Remove zero values\nmeasuresHistory = measuresHistoryWithZeros.query(&quot;RECOVERY_POINTS != 0.0&quot;)\nmeasuresSelection = measuresSelectionWithZeros.query(&quot;RECOVERY_POINTS != 0.0&quot;)\n\n# Get training data\nrawTrainingData = pd.DataFrame(GC.seasonMetrics())[[&apos;date&apos;, TRAINING_STRESS]]\n\n# Convert TSS to number\n\ntrainingDataSeries = rawTrainingData.groupby(&apos;date&apos;)[TRAINING_STRESS].sum()\ntrainingData = pd.DataFrame({&apos;date&apos;: trainingDataSeries.index, TRAINING_STRESS: trainingDataSeries.values})\n\n# Create new columns\nmeasuresHistory[&apos;Baseline&apos;] = measuresHistory[&apos;RECOVERY_POINTS&apos;].rolling(window=BASELINE_DAYS, min_periods=4).mean()\nmeasuresHistory[&apos;NormalRange&apos;] = measuresHistory[&apos;RECOVERY_POINTS&apos;].rolling(window=NORMALRANGE_DAYS, min_periods=20).mean()\nmeasuresHistory[&apos;StandardDeviation&apos;] = measuresHistory[&apos;RECOVERY_POINTS&apos;].rolling(window=NORMALRANGE_DAYS, min_periods=20).std()\nmeasuresHistory[&apos;Ceiling&apos;] = measuresHistory[&apos;NormalRange&apos;] + (0.75 * measuresHistory[&apos;StandardDeviation&apos;])\nmeasuresHistory[&apos;Bottom&apos;] = measuresHistory[&apos;NormalRange&apos;] - (0.75 * measuresHistory[&apos;StandardDeviation&apos;])\n\n# Apply Selection\nhrvData = measuresHistory[measuresHistory[&apos;date&apos;].isin(measuresSelection[&apos;date&apos;])]\n\n# Add Training Data\nallData = hrvData.join(trainingData.set_index(&apos;date&apos;), on=&apos;date&apos;, how=&apos;right&apos;)\n\n\n# Create plots\n\nif TRAINING_STRESS == &quot;Duration&quot;:\n\n    trace0 = Bar(\n        x = allData[&apos;date&apos;],\n        y = (allData[TRAINING_STRESS] / 60) / 60,\n        yaxis = &quot;y2&quot;,\n        name = &quot;Duration [h]&quot;,\n        marker = dict(\n            color = &quot;#1f77b4&quot;\n        )\n    )\n\nelse:\n\n    trace0 = Bar(\n        x = allData[&apos;date&apos;],\n        y = allData[TRAINING_STRESS],\n        yaxis = &quot;y2&quot;,\n        name = TRAINING_STRESS,\n        marker = dict(\n            color = &quot;#1f77b4&quot;\n        )\n    )\n\n\ntrace1 = Scatter(\n    x=hrvData[&apos;date&apos;],\n    y=hrvData[&apos;Ceiling&apos;],\n    fill= None,\n    mode=&apos;lines&apos;,\n    name=&quot;Top Normal&quot;,\n    line=dict(\n        color=&apos;#b3f6d1&apos;,\n    )\n)\ntrace2 = Scatter(\n    x=hrvData[&apos;date&apos;],\n    y=hrvData[&apos;Bottom&apos;],\n    fill=&apos;tonexty&apos;,\n    mode=&apos;lines&apos;,\n    name=&quot;Bottom Normal&quot;,\n    line=dict(\n        color=&apos;#b3f6d1&apos;,\n    )\n)\n\ntrace3 = Scatter(\n    x=hrvData[&apos;date&apos;],\n    y=hrvData[&apos;Baseline&apos;],\n    mode=&apos;lines&apos;,\n    name=&quot;Baseline&quot;,\n    line=dict(\n        color=&apos;red&apos;,\n    )\n)\n\n\ntrace4 = Scatter(\n    x=hrvData[&apos;date&apos;],\n    y=hrvData[&apos;RECOVERY_POINTS&apos;],\n    mode=&apos;lines+markers&apos;,\n    name=&quot;Recovery Points&quot;,\n    line=dict(\n        color=&apos;black&apos;,\n    )\n)\n\n\ndata = [trace0, trace1, trace2, trace3, trace4]\n\nif TRAINING_STRESS == &quot;Duration&quot;:\n    layout = Layout(\n        yaxis = dict(\n            title = &quot;HRV Recovery Points&quot;,\n            range = [4,10]\n        ),\n        yaxis2 = dict(\n            title = &quot;Duration [h]&quot;,\n            overlaying = &quot;y&quot;,\n            side = &quot;right&quot;,\n            range = [0,10]\n        ),\n        legend = dict(\n            orientation = &quot;h&quot;\n        )\n    )\n\nelse:\n    layout = Layout(\n        yaxis = dict(\n            title = &quot;HRV Recovery Points&quot;,\n            range = [4,10]\n        ),\n        yaxis2 = dict(\n            title = &quot;Training Stress&quot;,\n            overlaying = &quot;y&quot;,\n            side = &quot;right&quot;,\n            range = [0,800]\n        ),\n        legend = dict(\n            orientation = &quot;h&quot;\n        )\n    )\n\nfig = Figure(data = data, layout = layout)\n\n## Prepare Plot\nf =plotly.offline.plot(fig, auto_open = False, filename = tempfile.gettempdir() + &quot;/temp-plot.html&quot;)\n\n## Load Plot\nGC.webpage(&quot;file://&quot; + f)\n\n\n" />
		<property name="state" type="QString" value="" />
		<property name="showConsole" type="bool" value="0" />
		<property name="asWeb" type="bool" value="1" />
	</chart>
	<chart id="45" name="" title="Energy" >
		<property name="title" type="QString" value="Energy" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot;Energy Intake and Expenditure &quot;,\n&quot;description&quot;: &quot;Energy Intake from Nutrition:sl:/Energy Measures:sl:n:sl:nEnergy Expenditure = NEEE + ExEE:sl:n:sl:nNon Exercise Energy Expenditure (NEEE) from Mifflin St Jeor equation for BMR with Activity Factor:sl:n:sl:nExercise Energy Expenditure from Calories metric (based on Duration, Average HR, Sex and Age) &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 3,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 2,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Intake &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;kCal &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- measures(:qu:Nutrition:qu:, :qu:Energy:qu:);:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg Intake:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#47d5d5&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;NEEE &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;kCal &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n:sl:n        # Mifflin St Jeor equation for BMR:sl:n        m &lt;- measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:); # mass(kg):sl:n        h &lt;- config(height); # height(m):sl:n        age &lt;- (xx-config(dob)):sl:/365; # age(y):sl:n        s &lt;- config(sex)=:qu:Male:qu: ? 5 : -161;#sex(kCal):sl:n        bmr &lt;- 10*m + 625*h - 5*age + s;:sl:n:sl:n        # Activity Factor (excluding Excercise):sl:n        actFactor &lt;- 1.2; # Mostly sedentary:sl:n:sl:n        # Non-Exercise Energy Expenditure:sl:n        yy &lt;- round(bmr*actFactor);:sl:n:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg NonEx:qu:, round(avg));:sl:n    }:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#d58ed5&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;ExEE &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;kCal &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n:sl:n        # Exercise Energy Expenditure:sl:n        # Aggregate for multiple sessions on a day:sl:n        exee &lt;- aggregate(metrics(Calories), metrics(date), sum);:sl:n        exdd &lt;- aggregate(metrics(date), metrics(date), mean);:sl:n        # Add 0s on rest days (not found on exdd):sl:n        yy &lt;- round(sapply(xx, exdd[lowerbound(exdd, x)]=x ? exee[lowerbound(exdd,x)] : 0));:sl:n:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg Exercise:qu:, round(avg));:sl:n    }:sl:n    x { xx; }:sl:n    y { yy; }:sl:n} &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#40bf5d&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Expend &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;kCal &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- curve(NEEE, x);:sl:n        yy &lt;- curve(NEEE, y) + curve(ExEE, y);:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg Expend:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#ff0000&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Balance &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;kCal &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- curve(Expend, x);:sl:n        yy &lt;- curve(Intake, y) - curve(Expend, y);:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg Balance:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#b6b600&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;Date &quot;, &quot;type&quot;: 1, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;kCal &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#47d5d5&quot;, &quot;axiscolor&quot;: &quot;#47d5d5&quot;} ]\n}" />
	</chart>
	<chart id="45" name="" title="Nutrition" >
		<property name="title" type="QString" value="Nutrition" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot;Macro Nutrient Distribution &quot;,\n&quot;description&quot;: &quot;PRO:sl:/CHO:sl:/FAT as % of Energy intake and relative to body weight (g:sl:/kg) &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 3,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 2,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;PRO% &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date% &quot;, &quot;yname&quot;: &quot;% &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- 400*measures(:qu:Nutrition:qu:, :qu:PRO:qu:):sl:/measures(:qu:Nutrition:qu:, :qu:Energy:qu:);:sl:n:sl:n        avg &lt;- 400*sum(measures(:qu:Nutrition:qu:, :qu:PRO:qu:)):sl:/sum(measures(:qu:Nutrition:qu:, :qu:Energy:qu:));:sl:n        annotate(label, :qu:Avg PRO %:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#c7c763&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;CHO% &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date% &quot;, &quot;yname&quot;: &quot;% &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- 400*measures(:qu:Nutrition:qu:, :qu:CHO:qu:):sl:/measures(:qu:Nutrition:qu:, :qu:Energy:qu:);:sl:n:sl:n        avg &lt;- 400*sum(measures(:qu:Nutrition:qu:, :qu:CHO:qu:)):sl:/sum(measures(:qu:Nutrition:qu:, :qu:Energy:qu:));:sl:n        annotate(label, :qu:Avg CHO %:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#46d367&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;FAT% &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date% &quot;, &quot;yname&quot;: &quot;% &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- 900*measures(:qu:Nutrition:qu:, :qu:FAT:qu:):sl:/measures(:qu:Nutrition:qu:, :qu:Energy:qu:);:sl:n:sl:n        avg &lt;- 900*sum(measures(:qu:Nutrition:qu:, :qu:FAT:qu:)):sl:/sum(measures(:qu:Nutrition:qu:, :qu:Energy:qu:));:sl:n        annotate(label, :qu:Avg FAT %:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n} &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#ffaa7f&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;PRO &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;g:sl:/kg &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- measures(:qu:Nutrition:qu:, :qu:PRO:qu:):sl:/measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:);:sl:n:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg PRO g:sl:/kg:qu:, round(10*avg):sl:/10);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#c7c763&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;CHO &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;g:sl:/kg &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- measures(:qu:Nutrition:qu:, :qu:CHO:qu:):sl:/measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:);:sl:n:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg CHO g:sl:/kg:qu:, round(10*avg):sl:/10);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#46d367&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;FAT &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;g:sl:/kg &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- measures(:qu:Nutrition:qu:, :qu:FAT:qu:):sl:/measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:);:sl:n:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg FAT g:sl:/kg:qu:, round(10*avg):sl:/10);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#ffaa7f&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;Date% &quot;, &quot;type&quot;: 1, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;% &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 100, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#c7c763&quot;, &quot;axiscolor&quot;: &quot;#c7c763&quot;},\n{ &quot;name&quot;: &quot;Date &quot;, &quot;type&quot;: 1, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;g:sl:/kg &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#c7c763&quot;, &quot;axiscolor&quot;: &quot;#c7c763&quot;} ]\n}" />
	</chart>
</layout>
</layouts>
